// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module equalizer_equalizer_Pipeline_lvpe_est (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sym_phase_V_address0,
        sym_phase_V_ce0,
        sym_phase_V_q0,
        symbol_iq_M_real_V_address0,
        symbol_iq_M_real_V_ce0,
        symbol_iq_M_real_V_q0,
        symbol_iq_M_imag_V_address0,
        symbol_iq_M_imag_V_ce0,
        symbol_iq_M_imag_V_q0,
        current_polarity_V_0_0,
        current_polarity_V_1,
        current_polarity_V_2_0,
        current_polarity_V_3_0,
        lts_pilot_M_real_V_0_017_reload,
        lts_pilot_M_real_V_1_018_reload,
        lts_pilot_M_real_V_2_019_reload,
        lts_pilot_M_real_V_3_020_reload,
        lts_pilot_M_imag_V_0_021_reload,
        lts_pilot_M_imag_V_1_022_reload,
        lts_pilot_M_imag_V_2_023_reload,
        lts_pilot_M_imag_V_3_024_reload,
        Sxy_V_1_out,
        Sxy_V_1_out_ap_vld,
        atan_lut_V_address0,
        atan_lut_V_ce0,
        atan_lut_V_q0,
        grp_rotate_fu_947_p_din1,
        grp_rotate_fu_947_p_din2,
        grp_rotate_fu_947_p_din3,
        grp_rotate_fu_947_p_dout0_0,
        grp_rotate_fu_947_p_dout0_1,
        grp_rotate_fu_947_p_ce,
        grp_rotate_fu_947_p_start,
        grp_rotate_fu_947_p_ready,
        grp_rotate_fu_947_p_done,
        grp_rotate_fu_947_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] sym_phase_V_address0;
output   sym_phase_V_ce0;
input  [17:0] sym_phase_V_q0;
output  [5:0] symbol_iq_M_real_V_address0;
output   symbol_iq_M_real_V_ce0;
input  [15:0] symbol_iq_M_real_V_q0;
output  [5:0] symbol_iq_M_imag_V_address0;
output   symbol_iq_M_imag_V_ce0;
input  [15:0] symbol_iq_M_imag_V_q0;
input  [0:0] current_polarity_V_0_0;
input  [0:0] current_polarity_V_1;
input  [0:0] current_polarity_V_2_0;
input  [0:0] current_polarity_V_3_0;
input  [15:0] lts_pilot_M_real_V_0_017_reload;
input  [15:0] lts_pilot_M_real_V_1_018_reload;
input  [15:0] lts_pilot_M_real_V_2_019_reload;
input  [15:0] lts_pilot_M_real_V_3_020_reload;
input  [15:0] lts_pilot_M_imag_V_0_021_reload;
input  [15:0] lts_pilot_M_imag_V_1_022_reload;
input  [15:0] lts_pilot_M_imag_V_2_023_reload;
input  [15:0] lts_pilot_M_imag_V_3_024_reload;
output  [18:0] Sxy_V_1_out;
output   Sxy_V_1_out_ap_vld;
output  [8:0] atan_lut_V_address0;
output   atan_lut_V_ce0;
input  [8:0] atan_lut_V_q0;
output  [15:0] grp_rotate_fu_947_p_din1;
output  [15:0] grp_rotate_fu_947_p_din2;
output  [15:0] grp_rotate_fu_947_p_din3;
input  [15:0] grp_rotate_fu_947_p_dout0_0;
input  [15:0] grp_rotate_fu_947_p_dout0_1;
output   grp_rotate_fu_947_p_ce;
output   grp_rotate_fu_947_p_start;
input   grp_rotate_fu_947_p_ready;
input   grp_rotate_fu_947_p_done;
input   grp_rotate_fu_947_p_idle;

reg ap_idle;
reg sym_phase_V_ce0;
reg symbol_iq_M_real_V_ce0;
reg symbol_iq_M_imag_V_ce0;
reg Sxy_V_1_out_ap_vld;
reg atan_lut_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1057_fu_324_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1057_reg_896;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter1_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter2_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter3_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter4_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter5_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter6_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter7_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter8_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter9_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter10_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter11_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter12_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter13_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter14_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter15_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter16_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter17_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter18_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter19_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter20_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter21_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter22_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter23_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter24_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter25_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter26_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter27_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter28_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter29_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter30_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter31_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter32_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter33_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter34_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter35_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter36_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter37_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter38_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter39_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter40_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter41_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter42_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter43_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter44_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter45_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter46_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter47_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter48_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter49_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter50_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter51_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter52_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter53_reg;
reg   [0:0] icmp_ln1057_reg_896_pp0_iter54_reg;
wire   [1:0] trunc_ln573_fu_336_p1;
reg   [1:0] trunc_ln573_reg_900;
reg   [1:0] trunc_ln573_reg_900_pp0_iter1_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter2_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter3_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter4_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter5_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter6_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter7_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter8_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter9_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter10_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter11_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter12_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter13_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter14_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter15_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter16_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter17_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter18_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter19_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter20_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter21_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter22_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter23_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter24_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter25_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter26_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter27_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter28_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter29_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter30_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter31_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter32_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter33_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter34_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter35_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter36_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter37_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter38_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter39_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter40_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter41_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter42_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter43_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter44_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter45_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter46_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter47_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter48_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter49_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter50_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter51_reg;
reg   [1:0] trunc_ln573_reg_900_pp0_iter52_reg;
wire   [15:0] trunc_ln70_fu_366_p1;
reg   [15:0] trunc_ln70_reg_923;
reg   [15:0] symbol_iq_M_real_V_load_reg_928;
reg   [15:0] symbol_iq_M_imag_V_load_reg_933;
wire   [15:0] input_q_V_3_fu_407_p3;
reg   [15:0] input_q_V_3_reg_938;
wire  signed [31:0] sext_ln225_fu_433_p1;
wire  signed [31:0] sext_ln225_1_fu_437_p1;
reg  signed [31:0] sext_ln225_1_reg_949;
wire  signed [31:0] sext_ln225_3_fu_441_p1;
reg  signed [31:0] sext_ln225_3_reg_955;
wire  signed [31:0] sext_ln225_2_fu_445_p1;
wire  signed [31:0] grp_fu_779_p2;
wire   [31:0] abs_i_V_fu_496_p3;
reg   [31:0] abs_i_V_reg_977;
wire   [31:0] abs_q_V_fu_527_p3;
reg   [31:0] abs_q_V_reg_985;
reg   [0:0] tmp_reg_993;
reg   [0:0] tmp_11_reg_998;
wire   [2:0] quadrant_V_fu_553_p4;
reg   [2:0] quadrant_V_reg_1003;
reg   [2:0] quadrant_V_reg_1003_pp0_iter15_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter16_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter17_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter18_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter19_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter20_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter21_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter22_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter23_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter24_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter25_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter26_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter27_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter28_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter29_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter30_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter31_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter32_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter33_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter34_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter35_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter36_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter37_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter38_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter39_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter40_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter41_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter42_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter43_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter44_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter45_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter46_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter47_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter48_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter49_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter50_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter51_reg;
reg   [2:0] quadrant_V_reg_1003_pp0_iter52_reg;
wire   [31:0] min_V_1_fu_571_p3;
reg   [31:0] min_V_1_reg_1007;
wire   [0:0] icmp_ln1065_fu_583_p2;
reg   [0:0] icmp_ln1065_reg_1013;
reg   [22:0] tmp_5_reg_1019;
wire   [22:0] trunc_ln26_fu_599_p1;
reg   [22:0] trunc_ln26_reg_1024;
wire   [8:0] atan_addr_V_1_fu_641_p3;
reg   [8:0] atan_addr_V_1_reg_1039;
reg   [8:0] p_phase_V_reg_1049;
wire   [11:0] add_ln70_3_fu_657_p2;
wire   [11:0] zext_ln51_fu_673_p1;
wire   [11:0] zext_ln48_fu_687_p1;
wire  signed [11:0] sext_ln45_fu_701_p1;
wire   [11:0] zext_ln36_fu_705_p1;
wire   [11:0] sub_ln70_fu_713_p2;
wire    grp_rotate_fu_300_ap_ready;
reg  signed [11:0] ap_phi_mux_phase_out_phi_fu_282_p16;
wire   [11:0] ap_phi_reg_pp0_iter0_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter1_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter2_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter3_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter4_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter5_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter6_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter7_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter8_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter9_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter10_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter11_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter12_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter13_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter14_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter15_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter16_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter17_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter18_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter19_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter20_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter21_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter22_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter23_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter24_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter25_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter26_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter27_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter28_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter29_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter30_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter31_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter32_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter33_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter34_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter35_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter36_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter37_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter38_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter39_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter40_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter41_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter42_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter43_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter44_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter45_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter46_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter47_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter48_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter49_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter50_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter51_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter52_phase_out_reg_279;
reg   [11:0] ap_phi_reg_pp0_iter53_phase_out_reg_279;
wire  signed [11:0] sext_ln42_fu_728_p1;
wire   [11:0] zext_ln39_fu_742_p1;
reg    grp_rotate_fu_300_ap_start_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln573_fu_354_p1;
wire   [63:0] zext_ln573_1_fu_649_p1;
reg   [18:0] Sxy_V_1_fu_140;
wire  signed [18:0] grp_fu_812_p3;
reg  signed [18:0] ap_sig_allocacmp_Sxy_V_1_load;
wire    ap_loop_init;
reg   [2:0] i_V_2_fu_144;
reg   [2:0] ap_sig_allocacmp_i_V;
wire   [2:0] add_ln870_fu_330_p2;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] tmp_s_fu_340_p5;
wire   [5:0] tmp_s_fu_340_p6;
wire   [0:0] tmp_1_fu_378_p6;
wire   [15:0] input_i_V_1_fu_393_p2;
wire   [15:0] input_q_V_fu_387_p2;
wire   [15:0] input_i_V_3_fu_399_p3;
wire  signed [15:0] rhs_fu_415_p6;
wire  signed [15:0] rhs_3_fu_424_p6;
wire  signed [31:0] grp_fu_785_p2;
wire  signed [31:0] grp_fu_792_p3;
wire   [30:0] out_i_V_fu_451_p4;
wire  signed [32:0] grp_fu_802_p3;
wire  signed [31:0] sext_ln1676_fu_460_p1;
wire   [31:0] p_Val2_s_fu_473_p2;
wire   [0:0] p_Result_s_fu_489_p3;
wire   [31:0] p_Result_3_fu_479_p4;
wire   [31:0] out_q_V_fu_464_p4;
wire   [31:0] p_Val2_2_fu_504_p2;
wire   [0:0] p_Result_2_fu_520_p3;
wire   [31:0] p_Result_4_fu_510_p4;
wire   [0:0] icmp_ln1057_1_fu_549_p2;
wire   [0:0] icmp_ln1061_fu_561_p2;
wire   [0:0] xor_ln1061_fu_565_p2;
wire   [31:0] max_V_fu_577_p3;
wire   [31:0] r_fu_603_p2;
wire   [22:0] divisor_V_fu_614_p3;
wire   [31:0] grp_fu_623_p0;
wire   [22:0] grp_fu_623_p1;
wire   [31:0] grp_fu_623_p2;
wire   [0:0] tmp_12_fu_629_p3;
wire   [8:0] atan_addr_V_fu_637_p1;
wire   [11:0] zext_ln70_5_fu_653_p1;
wire   [10:0] zext_ln70_4_fu_663_p1;
wire   [10:0] add_ln70_2_fu_667_p2;
wire   [10:0] zext_ln70_3_fu_677_p1;
wire   [10:0] sub_ln70_2_fu_681_p2;
wire   [10:0] zext_ln70_2_fu_691_p1;
wire   [10:0] add_ln70_fu_695_p2;
wire   [11:0] zext_ln70_fu_709_p1;
wire   [9:0] zext_ln225_fu_719_p1;
wire   [9:0] ret_10_fu_722_p2;
wire   [9:0] zext_ln70_1_fu_733_p1;
wire   [9:0] sub_ln70_1_fu_736_p2;
wire  signed [5:0] lhs_V_fu_747_p6;
wire  signed [15:0] grp_fu_779_p1;
wire  signed [15:0] grp_fu_785_p1;
wire  signed [15:0] grp_fu_792_p0;
wire  signed [15:0] grp_fu_792_p1;
wire  signed [15:0] grp_fu_802_p0;
wire  signed [15:0] grp_fu_802_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] grp_fu_623_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 grp_rotate_fu_300_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

equalizer_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U79(
    .din0(6'd7),
    .din1(6'd21),
    .din2(6'd43),
    .din3(6'd57),
    .din4(tmp_s_fu_340_p5),
    .dout(tmp_s_fu_340_p6)
);

equalizer_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U80(
    .din0(current_polarity_V_0_0),
    .din1(current_polarity_V_1),
    .din2(current_polarity_V_2_0),
    .din3(current_polarity_V_3_0),
    .din4(trunc_ln573_reg_900_pp0_iter8_reg),
    .dout(tmp_1_fu_378_p6)
);

equalizer_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U81(
    .din0(lts_pilot_M_real_V_0_017_reload),
    .din1(lts_pilot_M_real_V_1_018_reload),
    .din2(lts_pilot_M_real_V_2_019_reload),
    .din3(lts_pilot_M_real_V_3_020_reload),
    .din4(trunc_ln573_reg_900_pp0_iter8_reg),
    .dout(rhs_fu_415_p6)
);

equalizer_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U82(
    .din0(lts_pilot_M_imag_V_0_021_reload),
    .din1(lts_pilot_M_imag_V_1_022_reload),
    .din2(lts_pilot_M_imag_V_2_023_reload),
    .din3(lts_pilot_M_imag_V_3_024_reload),
    .din4(trunc_ln573_reg_900_pp0_iter8_reg),
    .dout(rhs_3_fu_424_p6)
);

equalizer_udiv_32ns_23ns_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 32 ))
udiv_32ns_23ns_32_36_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_623_p0),
    .din1(grp_fu_623_p1),
    .ce(1'b1),
    .dout(grp_fu_623_p2)
);

equalizer_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U84(
    .din0(6'd7),
    .din1(6'd21),
    .din2(6'd43),
    .din3(6'd57),
    .din4(trunc_ln573_reg_900_pp0_iter52_reg),
    .dout(lhs_V_fu_747_p6)
);

equalizer_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rhs_fu_415_p6),
    .din1(grp_fu_779_p1),
    .ce(1'b1),
    .dout(grp_fu_779_p2)
);

equalizer_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rhs_3_fu_424_p6),
    .din1(grp_fu_785_p1),
    .ce(1'b1),
    .dout(grp_fu_785_p2)
);

equalizer_mac_mulsub_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_mulsub_16s_16s_32s_32_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_792_p0),
    .din1(grp_fu_792_p1),
    .din2(grp_fu_779_p2),
    .ce(1'b1),
    .dout(grp_fu_792_p3)
);

equalizer_mac_muladd_16s_16s_32s_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_16s_16s_32s_33_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_802_p0),
    .din1(grp_fu_802_p1),
    .din2(grp_fu_785_p2),
    .ce(1'b1),
    .dout(grp_fu_802_p3)
);

equalizer_mac_muladd_12s_6s_19s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
mac_muladd_12s_6s_19s_19_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_phase_out_phi_fu_282_p16),
    .din1(lhs_V_fu_747_p6),
    .din2(ap_sig_allocacmp_Sxy_V_1_load),
    .ce(1'b1),
    .dout(grp_fu_812_p3)
);

equalizer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter55_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rotate_fu_300_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln1057_reg_896 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_rotate_fu_300_ap_start_reg <= 1'b1;
        end else if ((grp_rotate_fu_300_ap_ready == 1'b1)) begin
            grp_rotate_fu_300_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            Sxy_V_1_fu_140 <= 19'd0;
        end else if ((ap_enable_reg_pp0_iter56 == 1'b1)) begin
            Sxy_V_1_fu_140 <= grp_fu_812_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter52 == 1'b1))) begin
        if (((quadrant_V_reg_1003_pp0_iter51_reg == 3'd0) & (icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= zext_ln36_fu_705_p1;
        end else if (((quadrant_V_reg_1003_pp0_iter51_reg == 3'd3) & (icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= sext_ln45_fu_701_p1;
        end else if (((quadrant_V_reg_1003_pp0_iter51_reg == 3'd4) & (icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= zext_ln48_fu_687_p1;
        end else if (((quadrant_V_reg_1003_pp0_iter51_reg == 3'd5) & (icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= zext_ln51_fu_673_p1;
        end else if (((quadrant_V_reg_1003_pp0_iter51_reg == 3'd6) & (icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= add_ln70_3_fu_657_p2;
        end else if (((quadrant_V_reg_1003_pp0_iter51_reg == 3'd7) & (icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= sub_ln70_fu_713_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter53_phase_out_reg_279 <= ap_phi_reg_pp0_iter52_phase_out_reg_279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1057_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_V_2_fu_144 <= add_ln870_fu_330_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_2_fu_144 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_896_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        abs_i_V_reg_977 <= abs_i_V_fu_496_p3;
        abs_q_V_reg_985 <= abs_q_V_fu_527_p3;
        tmp_11_reg_998 <= grp_fu_802_p3[32'd32];
        tmp_reg_993 <= grp_fu_792_p3[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln1057_reg_896_pp0_iter10_reg <= icmp_ln1057_reg_896_pp0_iter9_reg;
        icmp_ln1057_reg_896_pp0_iter11_reg <= icmp_ln1057_reg_896_pp0_iter10_reg;
        icmp_ln1057_reg_896_pp0_iter12_reg <= icmp_ln1057_reg_896_pp0_iter11_reg;
        icmp_ln1057_reg_896_pp0_iter13_reg <= icmp_ln1057_reg_896_pp0_iter12_reg;
        icmp_ln1057_reg_896_pp0_iter14_reg <= icmp_ln1057_reg_896_pp0_iter13_reg;
        icmp_ln1057_reg_896_pp0_iter15_reg <= icmp_ln1057_reg_896_pp0_iter14_reg;
        icmp_ln1057_reg_896_pp0_iter16_reg <= icmp_ln1057_reg_896_pp0_iter15_reg;
        icmp_ln1057_reg_896_pp0_iter17_reg <= icmp_ln1057_reg_896_pp0_iter16_reg;
        icmp_ln1057_reg_896_pp0_iter18_reg <= icmp_ln1057_reg_896_pp0_iter17_reg;
        icmp_ln1057_reg_896_pp0_iter19_reg <= icmp_ln1057_reg_896_pp0_iter18_reg;
        icmp_ln1057_reg_896_pp0_iter20_reg <= icmp_ln1057_reg_896_pp0_iter19_reg;
        icmp_ln1057_reg_896_pp0_iter21_reg <= icmp_ln1057_reg_896_pp0_iter20_reg;
        icmp_ln1057_reg_896_pp0_iter22_reg <= icmp_ln1057_reg_896_pp0_iter21_reg;
        icmp_ln1057_reg_896_pp0_iter23_reg <= icmp_ln1057_reg_896_pp0_iter22_reg;
        icmp_ln1057_reg_896_pp0_iter24_reg <= icmp_ln1057_reg_896_pp0_iter23_reg;
        icmp_ln1057_reg_896_pp0_iter25_reg <= icmp_ln1057_reg_896_pp0_iter24_reg;
        icmp_ln1057_reg_896_pp0_iter26_reg <= icmp_ln1057_reg_896_pp0_iter25_reg;
        icmp_ln1057_reg_896_pp0_iter27_reg <= icmp_ln1057_reg_896_pp0_iter26_reg;
        icmp_ln1057_reg_896_pp0_iter28_reg <= icmp_ln1057_reg_896_pp0_iter27_reg;
        icmp_ln1057_reg_896_pp0_iter29_reg <= icmp_ln1057_reg_896_pp0_iter28_reg;
        icmp_ln1057_reg_896_pp0_iter2_reg <= icmp_ln1057_reg_896_pp0_iter1_reg;
        icmp_ln1057_reg_896_pp0_iter30_reg <= icmp_ln1057_reg_896_pp0_iter29_reg;
        icmp_ln1057_reg_896_pp0_iter31_reg <= icmp_ln1057_reg_896_pp0_iter30_reg;
        icmp_ln1057_reg_896_pp0_iter32_reg <= icmp_ln1057_reg_896_pp0_iter31_reg;
        icmp_ln1057_reg_896_pp0_iter33_reg <= icmp_ln1057_reg_896_pp0_iter32_reg;
        icmp_ln1057_reg_896_pp0_iter34_reg <= icmp_ln1057_reg_896_pp0_iter33_reg;
        icmp_ln1057_reg_896_pp0_iter35_reg <= icmp_ln1057_reg_896_pp0_iter34_reg;
        icmp_ln1057_reg_896_pp0_iter36_reg <= icmp_ln1057_reg_896_pp0_iter35_reg;
        icmp_ln1057_reg_896_pp0_iter37_reg <= icmp_ln1057_reg_896_pp0_iter36_reg;
        icmp_ln1057_reg_896_pp0_iter38_reg <= icmp_ln1057_reg_896_pp0_iter37_reg;
        icmp_ln1057_reg_896_pp0_iter39_reg <= icmp_ln1057_reg_896_pp0_iter38_reg;
        icmp_ln1057_reg_896_pp0_iter3_reg <= icmp_ln1057_reg_896_pp0_iter2_reg;
        icmp_ln1057_reg_896_pp0_iter40_reg <= icmp_ln1057_reg_896_pp0_iter39_reg;
        icmp_ln1057_reg_896_pp0_iter41_reg <= icmp_ln1057_reg_896_pp0_iter40_reg;
        icmp_ln1057_reg_896_pp0_iter42_reg <= icmp_ln1057_reg_896_pp0_iter41_reg;
        icmp_ln1057_reg_896_pp0_iter43_reg <= icmp_ln1057_reg_896_pp0_iter42_reg;
        icmp_ln1057_reg_896_pp0_iter44_reg <= icmp_ln1057_reg_896_pp0_iter43_reg;
        icmp_ln1057_reg_896_pp0_iter45_reg <= icmp_ln1057_reg_896_pp0_iter44_reg;
        icmp_ln1057_reg_896_pp0_iter46_reg <= icmp_ln1057_reg_896_pp0_iter45_reg;
        icmp_ln1057_reg_896_pp0_iter47_reg <= icmp_ln1057_reg_896_pp0_iter46_reg;
        icmp_ln1057_reg_896_pp0_iter48_reg <= icmp_ln1057_reg_896_pp0_iter47_reg;
        icmp_ln1057_reg_896_pp0_iter49_reg <= icmp_ln1057_reg_896_pp0_iter48_reg;
        icmp_ln1057_reg_896_pp0_iter4_reg <= icmp_ln1057_reg_896_pp0_iter3_reg;
        icmp_ln1057_reg_896_pp0_iter50_reg <= icmp_ln1057_reg_896_pp0_iter49_reg;
        icmp_ln1057_reg_896_pp0_iter51_reg <= icmp_ln1057_reg_896_pp0_iter50_reg;
        icmp_ln1057_reg_896_pp0_iter52_reg <= icmp_ln1057_reg_896_pp0_iter51_reg;
        icmp_ln1057_reg_896_pp0_iter53_reg <= icmp_ln1057_reg_896_pp0_iter52_reg;
        icmp_ln1057_reg_896_pp0_iter54_reg <= icmp_ln1057_reg_896_pp0_iter53_reg;
        icmp_ln1057_reg_896_pp0_iter5_reg <= icmp_ln1057_reg_896_pp0_iter4_reg;
        icmp_ln1057_reg_896_pp0_iter6_reg <= icmp_ln1057_reg_896_pp0_iter5_reg;
        icmp_ln1057_reg_896_pp0_iter7_reg <= icmp_ln1057_reg_896_pp0_iter6_reg;
        icmp_ln1057_reg_896_pp0_iter8_reg <= icmp_ln1057_reg_896_pp0_iter7_reg;
        icmp_ln1057_reg_896_pp0_iter9_reg <= icmp_ln1057_reg_896_pp0_iter8_reg;
        quadrant_V_reg_1003_pp0_iter15_reg <= quadrant_V_reg_1003;
        quadrant_V_reg_1003_pp0_iter16_reg <= quadrant_V_reg_1003_pp0_iter15_reg;
        quadrant_V_reg_1003_pp0_iter17_reg <= quadrant_V_reg_1003_pp0_iter16_reg;
        quadrant_V_reg_1003_pp0_iter18_reg <= quadrant_V_reg_1003_pp0_iter17_reg;
        quadrant_V_reg_1003_pp0_iter19_reg <= quadrant_V_reg_1003_pp0_iter18_reg;
        quadrant_V_reg_1003_pp0_iter20_reg <= quadrant_V_reg_1003_pp0_iter19_reg;
        quadrant_V_reg_1003_pp0_iter21_reg <= quadrant_V_reg_1003_pp0_iter20_reg;
        quadrant_V_reg_1003_pp0_iter22_reg <= quadrant_V_reg_1003_pp0_iter21_reg;
        quadrant_V_reg_1003_pp0_iter23_reg <= quadrant_V_reg_1003_pp0_iter22_reg;
        quadrant_V_reg_1003_pp0_iter24_reg <= quadrant_V_reg_1003_pp0_iter23_reg;
        quadrant_V_reg_1003_pp0_iter25_reg <= quadrant_V_reg_1003_pp0_iter24_reg;
        quadrant_V_reg_1003_pp0_iter26_reg <= quadrant_V_reg_1003_pp0_iter25_reg;
        quadrant_V_reg_1003_pp0_iter27_reg <= quadrant_V_reg_1003_pp0_iter26_reg;
        quadrant_V_reg_1003_pp0_iter28_reg <= quadrant_V_reg_1003_pp0_iter27_reg;
        quadrant_V_reg_1003_pp0_iter29_reg <= quadrant_V_reg_1003_pp0_iter28_reg;
        quadrant_V_reg_1003_pp0_iter30_reg <= quadrant_V_reg_1003_pp0_iter29_reg;
        quadrant_V_reg_1003_pp0_iter31_reg <= quadrant_V_reg_1003_pp0_iter30_reg;
        quadrant_V_reg_1003_pp0_iter32_reg <= quadrant_V_reg_1003_pp0_iter31_reg;
        quadrant_V_reg_1003_pp0_iter33_reg <= quadrant_V_reg_1003_pp0_iter32_reg;
        quadrant_V_reg_1003_pp0_iter34_reg <= quadrant_V_reg_1003_pp0_iter33_reg;
        quadrant_V_reg_1003_pp0_iter35_reg <= quadrant_V_reg_1003_pp0_iter34_reg;
        quadrant_V_reg_1003_pp0_iter36_reg <= quadrant_V_reg_1003_pp0_iter35_reg;
        quadrant_V_reg_1003_pp0_iter37_reg <= quadrant_V_reg_1003_pp0_iter36_reg;
        quadrant_V_reg_1003_pp0_iter38_reg <= quadrant_V_reg_1003_pp0_iter37_reg;
        quadrant_V_reg_1003_pp0_iter39_reg <= quadrant_V_reg_1003_pp0_iter38_reg;
        quadrant_V_reg_1003_pp0_iter40_reg <= quadrant_V_reg_1003_pp0_iter39_reg;
        quadrant_V_reg_1003_pp0_iter41_reg <= quadrant_V_reg_1003_pp0_iter40_reg;
        quadrant_V_reg_1003_pp0_iter42_reg <= quadrant_V_reg_1003_pp0_iter41_reg;
        quadrant_V_reg_1003_pp0_iter43_reg <= quadrant_V_reg_1003_pp0_iter42_reg;
        quadrant_V_reg_1003_pp0_iter44_reg <= quadrant_V_reg_1003_pp0_iter43_reg;
        quadrant_V_reg_1003_pp0_iter45_reg <= quadrant_V_reg_1003_pp0_iter44_reg;
        quadrant_V_reg_1003_pp0_iter46_reg <= quadrant_V_reg_1003_pp0_iter45_reg;
        quadrant_V_reg_1003_pp0_iter47_reg <= quadrant_V_reg_1003_pp0_iter46_reg;
        quadrant_V_reg_1003_pp0_iter48_reg <= quadrant_V_reg_1003_pp0_iter47_reg;
        quadrant_V_reg_1003_pp0_iter49_reg <= quadrant_V_reg_1003_pp0_iter48_reg;
        quadrant_V_reg_1003_pp0_iter50_reg <= quadrant_V_reg_1003_pp0_iter49_reg;
        quadrant_V_reg_1003_pp0_iter51_reg <= quadrant_V_reg_1003_pp0_iter50_reg;
        quadrant_V_reg_1003_pp0_iter52_reg <= quadrant_V_reg_1003_pp0_iter51_reg;
        trunc_ln573_reg_900_pp0_iter10_reg <= trunc_ln573_reg_900_pp0_iter9_reg;
        trunc_ln573_reg_900_pp0_iter11_reg <= trunc_ln573_reg_900_pp0_iter10_reg;
        trunc_ln573_reg_900_pp0_iter12_reg <= trunc_ln573_reg_900_pp0_iter11_reg;
        trunc_ln573_reg_900_pp0_iter13_reg <= trunc_ln573_reg_900_pp0_iter12_reg;
        trunc_ln573_reg_900_pp0_iter14_reg <= trunc_ln573_reg_900_pp0_iter13_reg;
        trunc_ln573_reg_900_pp0_iter15_reg <= trunc_ln573_reg_900_pp0_iter14_reg;
        trunc_ln573_reg_900_pp0_iter16_reg <= trunc_ln573_reg_900_pp0_iter15_reg;
        trunc_ln573_reg_900_pp0_iter17_reg <= trunc_ln573_reg_900_pp0_iter16_reg;
        trunc_ln573_reg_900_pp0_iter18_reg <= trunc_ln573_reg_900_pp0_iter17_reg;
        trunc_ln573_reg_900_pp0_iter19_reg <= trunc_ln573_reg_900_pp0_iter18_reg;
        trunc_ln573_reg_900_pp0_iter20_reg <= trunc_ln573_reg_900_pp0_iter19_reg;
        trunc_ln573_reg_900_pp0_iter21_reg <= trunc_ln573_reg_900_pp0_iter20_reg;
        trunc_ln573_reg_900_pp0_iter22_reg <= trunc_ln573_reg_900_pp0_iter21_reg;
        trunc_ln573_reg_900_pp0_iter23_reg <= trunc_ln573_reg_900_pp0_iter22_reg;
        trunc_ln573_reg_900_pp0_iter24_reg <= trunc_ln573_reg_900_pp0_iter23_reg;
        trunc_ln573_reg_900_pp0_iter25_reg <= trunc_ln573_reg_900_pp0_iter24_reg;
        trunc_ln573_reg_900_pp0_iter26_reg <= trunc_ln573_reg_900_pp0_iter25_reg;
        trunc_ln573_reg_900_pp0_iter27_reg <= trunc_ln573_reg_900_pp0_iter26_reg;
        trunc_ln573_reg_900_pp0_iter28_reg <= trunc_ln573_reg_900_pp0_iter27_reg;
        trunc_ln573_reg_900_pp0_iter29_reg <= trunc_ln573_reg_900_pp0_iter28_reg;
        trunc_ln573_reg_900_pp0_iter2_reg <= trunc_ln573_reg_900_pp0_iter1_reg;
        trunc_ln573_reg_900_pp0_iter30_reg <= trunc_ln573_reg_900_pp0_iter29_reg;
        trunc_ln573_reg_900_pp0_iter31_reg <= trunc_ln573_reg_900_pp0_iter30_reg;
        trunc_ln573_reg_900_pp0_iter32_reg <= trunc_ln573_reg_900_pp0_iter31_reg;
        trunc_ln573_reg_900_pp0_iter33_reg <= trunc_ln573_reg_900_pp0_iter32_reg;
        trunc_ln573_reg_900_pp0_iter34_reg <= trunc_ln573_reg_900_pp0_iter33_reg;
        trunc_ln573_reg_900_pp0_iter35_reg <= trunc_ln573_reg_900_pp0_iter34_reg;
        trunc_ln573_reg_900_pp0_iter36_reg <= trunc_ln573_reg_900_pp0_iter35_reg;
        trunc_ln573_reg_900_pp0_iter37_reg <= trunc_ln573_reg_900_pp0_iter36_reg;
        trunc_ln573_reg_900_pp0_iter38_reg <= trunc_ln573_reg_900_pp0_iter37_reg;
        trunc_ln573_reg_900_pp0_iter39_reg <= trunc_ln573_reg_900_pp0_iter38_reg;
        trunc_ln573_reg_900_pp0_iter3_reg <= trunc_ln573_reg_900_pp0_iter2_reg;
        trunc_ln573_reg_900_pp0_iter40_reg <= trunc_ln573_reg_900_pp0_iter39_reg;
        trunc_ln573_reg_900_pp0_iter41_reg <= trunc_ln573_reg_900_pp0_iter40_reg;
        trunc_ln573_reg_900_pp0_iter42_reg <= trunc_ln573_reg_900_pp0_iter41_reg;
        trunc_ln573_reg_900_pp0_iter43_reg <= trunc_ln573_reg_900_pp0_iter42_reg;
        trunc_ln573_reg_900_pp0_iter44_reg <= trunc_ln573_reg_900_pp0_iter43_reg;
        trunc_ln573_reg_900_pp0_iter45_reg <= trunc_ln573_reg_900_pp0_iter44_reg;
        trunc_ln573_reg_900_pp0_iter46_reg <= trunc_ln573_reg_900_pp0_iter45_reg;
        trunc_ln573_reg_900_pp0_iter47_reg <= trunc_ln573_reg_900_pp0_iter46_reg;
        trunc_ln573_reg_900_pp0_iter48_reg <= trunc_ln573_reg_900_pp0_iter47_reg;
        trunc_ln573_reg_900_pp0_iter49_reg <= trunc_ln573_reg_900_pp0_iter48_reg;
        trunc_ln573_reg_900_pp0_iter4_reg <= trunc_ln573_reg_900_pp0_iter3_reg;
        trunc_ln573_reg_900_pp0_iter50_reg <= trunc_ln573_reg_900_pp0_iter49_reg;
        trunc_ln573_reg_900_pp0_iter51_reg <= trunc_ln573_reg_900_pp0_iter50_reg;
        trunc_ln573_reg_900_pp0_iter52_reg <= trunc_ln573_reg_900_pp0_iter51_reg;
        trunc_ln573_reg_900_pp0_iter5_reg <= trunc_ln573_reg_900_pp0_iter4_reg;
        trunc_ln573_reg_900_pp0_iter6_reg <= trunc_ln573_reg_900_pp0_iter5_reg;
        trunc_ln573_reg_900_pp0_iter7_reg <= trunc_ln573_reg_900_pp0_iter6_reg;
        trunc_ln573_reg_900_pp0_iter8_reg <= trunc_ln573_reg_900_pp0_iter7_reg;
        trunc_ln573_reg_900_pp0_iter9_reg <= trunc_ln573_reg_900_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1057_reg_896 <= icmp_ln1057_fu_324_p2;
        icmp_ln1057_reg_896_pp0_iter1_reg <= icmp_ln1057_reg_896;
        trunc_ln573_reg_900_pp0_iter1_reg <= trunc_ln573_reg_900;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_phase_out_reg_279 <= ap_phi_reg_pp0_iter9_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_phase_out_reg_279 <= ap_phi_reg_pp0_iter10_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_phase_out_reg_279 <= ap_phi_reg_pp0_iter11_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_phase_out_reg_279 <= ap_phi_reg_pp0_iter12_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_phase_out_reg_279 <= ap_phi_reg_pp0_iter13_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_phase_out_reg_279 <= ap_phi_reg_pp0_iter14_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_phase_out_reg_279 <= ap_phi_reg_pp0_iter15_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_phase_out_reg_279 <= ap_phi_reg_pp0_iter16_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_phase_out_reg_279 <= ap_phi_reg_pp0_iter17_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_phase_out_reg_279 <= ap_phi_reg_pp0_iter18_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_phase_out_reg_279 <= ap_phi_reg_pp0_iter0_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_phase_out_reg_279 <= ap_phi_reg_pp0_iter19_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_phase_out_reg_279 <= ap_phi_reg_pp0_iter20_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_phase_out_reg_279 <= ap_phi_reg_pp0_iter21_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_phase_out_reg_279 <= ap_phi_reg_pp0_iter22_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_phase_out_reg_279 <= ap_phi_reg_pp0_iter23_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_phase_out_reg_279 <= ap_phi_reg_pp0_iter24_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_phase_out_reg_279 <= ap_phi_reg_pp0_iter25_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter27_phase_out_reg_279 <= ap_phi_reg_pp0_iter26_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_phase_out_reg_279 <= ap_phi_reg_pp0_iter27_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_phase_out_reg_279 <= ap_phi_reg_pp0_iter28_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_phase_out_reg_279 <= ap_phi_reg_pp0_iter1_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_phase_out_reg_279 <= ap_phi_reg_pp0_iter29_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_phi_reg_pp0_iter31_phase_out_reg_279 <= ap_phi_reg_pp0_iter30_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        ap_phi_reg_pp0_iter32_phase_out_reg_279 <= ap_phi_reg_pp0_iter31_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_phi_reg_pp0_iter33_phase_out_reg_279 <= ap_phi_reg_pp0_iter32_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        ap_phi_reg_pp0_iter34_phase_out_reg_279 <= ap_phi_reg_pp0_iter33_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        ap_phi_reg_pp0_iter35_phase_out_reg_279 <= ap_phi_reg_pp0_iter34_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        ap_phi_reg_pp0_iter36_phase_out_reg_279 <= ap_phi_reg_pp0_iter35_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_phase_out_reg_279 <= ap_phi_reg_pp0_iter36_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        ap_phi_reg_pp0_iter38_phase_out_reg_279 <= ap_phi_reg_pp0_iter37_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        ap_phi_reg_pp0_iter39_phase_out_reg_279 <= ap_phi_reg_pp0_iter38_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_phase_out_reg_279 <= ap_phi_reg_pp0_iter2_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        ap_phi_reg_pp0_iter40_phase_out_reg_279 <= ap_phi_reg_pp0_iter39_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        ap_phi_reg_pp0_iter41_phase_out_reg_279 <= ap_phi_reg_pp0_iter40_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        ap_phi_reg_pp0_iter42_phase_out_reg_279 <= ap_phi_reg_pp0_iter41_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        ap_phi_reg_pp0_iter43_phase_out_reg_279 <= ap_phi_reg_pp0_iter42_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        ap_phi_reg_pp0_iter44_phase_out_reg_279 <= ap_phi_reg_pp0_iter43_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter44 == 1'b1))) begin
        ap_phi_reg_pp0_iter45_phase_out_reg_279 <= ap_phi_reg_pp0_iter44_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        ap_phi_reg_pp0_iter46_phase_out_reg_279 <= ap_phi_reg_pp0_iter45_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        ap_phi_reg_pp0_iter47_phase_out_reg_279 <= ap_phi_reg_pp0_iter46_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        ap_phi_reg_pp0_iter48_phase_out_reg_279 <= ap_phi_reg_pp0_iter47_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter48 == 1'b1))) begin
        ap_phi_reg_pp0_iter49_phase_out_reg_279 <= ap_phi_reg_pp0_iter48_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_phase_out_reg_279 <= ap_phi_reg_pp0_iter3_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        ap_phi_reg_pp0_iter50_phase_out_reg_279 <= ap_phi_reg_pp0_iter49_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter50 == 1'b1))) begin
        ap_phi_reg_pp0_iter51_phase_out_reg_279 <= ap_phi_reg_pp0_iter50_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter51 == 1'b1))) begin
        ap_phi_reg_pp0_iter52_phase_out_reg_279 <= ap_phi_reg_pp0_iter51_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_phase_out_reg_279 <= ap_phi_reg_pp0_iter4_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_phase_out_reg_279 <= ap_phi_reg_pp0_iter5_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_phase_out_reg_279 <= ap_phi_reg_pp0_iter6_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_phase_out_reg_279 <= ap_phi_reg_pp0_iter7_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_phase_out_reg_279 <= ap_phi_reg_pp0_iter8_phase_out_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_896_pp0_iter49_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        atan_addr_V_1_reg_1039 <= atan_addr_V_1_fu_641_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_896_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1065_reg_1013 <= icmp_ln1065_fu_583_p2;
        min_V_1_reg_1007 <= min_V_1_fu_571_p3;
        quadrant_V_reg_1003 <= quadrant_V_fu_553_p4;
        tmp_5_reg_1019 <= {{max_V_fu_577_p3[31:9]}};
        trunc_ln26_reg_1024 <= trunc_ln26_fu_599_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_896_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_q_V_3_reg_938 <= input_q_V_3_fu_407_p3;
        sext_ln225_1_reg_949 <= sext_ln225_1_fu_437_p1;
        sext_ln225_3_reg_955 <= sext_ln225_3_fu_441_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_896_pp0_iter51_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_phase_V_reg_1049 <= atan_lut_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_896 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        symbol_iq_M_imag_V_load_reg_933 <= symbol_iq_M_imag_V_q0;
        symbol_iq_M_real_V_load_reg_928 <= symbol_iq_M_real_V_q0;
        trunc_ln70_reg_923 <= trunc_ln70_fu_366_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_324_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln573_reg_900 <= trunc_ln573_fu_336_p1;
    end
end

always @ (*) begin
    if (((icmp_ln1057_reg_896_pp0_iter54_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Sxy_V_1_out_ap_vld = 1'b1;
    end else begin
        Sxy_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_324_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter55_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_896_pp0_iter52_reg == 1'd0)) begin
        if ((quadrant_V_reg_1003_pp0_iter52_reg == 3'd1)) begin
            ap_phi_mux_phase_out_phi_fu_282_p16 = zext_ln39_fu_742_p1;
        end else if ((quadrant_V_reg_1003_pp0_iter52_reg == 3'd2)) begin
            ap_phi_mux_phase_out_phi_fu_282_p16 = sext_ln42_fu_728_p1;
        end else begin
            ap_phi_mux_phase_out_phi_fu_282_p16 = ap_phi_reg_pp0_iter53_phase_out_reg_279;
        end
    end else begin
        ap_phi_mux_phase_out_phi_fu_282_p16 = ap_phi_reg_pp0_iter53_phase_out_reg_279;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter56 == 1'b1))) begin
        ap_sig_allocacmp_Sxy_V_1_load = grp_fu_812_p3;
    end else begin
        ap_sig_allocacmp_Sxy_V_1_load = Sxy_V_1_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_V = 3'd0;
    end else begin
        ap_sig_allocacmp_i_V = i_V_2_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter51 == 1'b1))) begin
        atan_lut_V_ce0 = 1'b1;
    end else begin
        atan_lut_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sym_phase_V_ce0 = 1'b1;
    end else begin
        sym_phase_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        symbol_iq_M_imag_V_ce0 = 1'b1;
    end else begin
        symbol_iq_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        symbol_iq_M_real_V_ce0 = 1'b1;
    end else begin
        symbol_iq_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Sxy_V_1_out = Sxy_V_1_fu_140;

assign abs_i_V_fu_496_p3 = ((p_Result_s_fu_489_p3[0:0] == 1'b1) ? p_Result_3_fu_479_p4 : sext_ln1676_fu_460_p1);

assign abs_q_V_fu_527_p3 = ((p_Result_2_fu_520_p3[0:0] == 1'b1) ? p_Result_4_fu_510_p4 : out_q_V_fu_464_p4);

assign add_ln70_2_fu_667_p2 = (zext_ln70_4_fu_663_p1 + 11'd804);

assign add_ln70_3_fu_657_p2 = ($signed(zext_ln70_5_fu_653_p1) + $signed(12'd2488));

assign add_ln70_fu_695_p2 = ($signed(zext_ln70_2_fu_691_p1) + $signed(11'd1244));

assign add_ln870_fu_330_p2 = (ap_sig_allocacmp_i_V + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_phase_out_reg_279 = 'bx;

assign atan_addr_V_1_fu_641_p3 = ((tmp_12_fu_629_p3[0:0] == 1'b1) ? 9'd511 : atan_addr_V_fu_637_p1);

assign atan_addr_V_fu_637_p1 = grp_fu_623_p2[8:0];

assign atan_lut_V_address0 = zext_ln573_1_fu_649_p1;

assign divisor_V_fu_614_p3 = ((icmp_ln1065_reg_1013[0:0] == 1'b1) ? tmp_5_reg_1019 : trunc_ln26_reg_1024);

assign grp_fu_623_p0 = ((icmp_ln1065_reg_1013[0:0] == 1'b1) ? min_V_1_reg_1007 : r_fu_603_p2);

assign grp_fu_623_p1 = grp_fu_623_p10;

assign grp_fu_623_p10 = divisor_V_fu_614_p3;

assign grp_fu_779_p1 = sext_ln225_fu_433_p1;

assign grp_fu_785_p1 = sext_ln225_fu_433_p1;

assign grp_fu_792_p0 = sext_ln225_3_reg_955;

assign grp_fu_792_p1 = sext_ln225_2_fu_445_p1;

assign grp_fu_802_p0 = sext_ln225_1_reg_949;

assign grp_fu_802_p1 = sext_ln225_2_fu_445_p1;

assign grp_rotate_fu_300_ap_ready = grp_rotate_fu_947_p_ready;

assign grp_rotate_fu_947_p_ce = 1'b1;

assign grp_rotate_fu_947_p_din1 = trunc_ln70_reg_923;

assign grp_rotate_fu_947_p_din2 = symbol_iq_M_real_V_load_reg_928;

assign grp_rotate_fu_947_p_din3 = symbol_iq_M_imag_V_load_reg_933;

assign grp_rotate_fu_947_p_start = grp_rotate_fu_300_ap_start_reg;

assign icmp_ln1057_1_fu_549_p2 = (($signed(abs_i_V_reg_977) < $signed(abs_q_V_reg_985)) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_324_p2 = ((ap_sig_allocacmp_i_V == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1061_fu_561_p2 = (($signed(abs_i_V_reg_977) < $signed(abs_q_V_reg_985)) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_583_p2 = ((max_V_fu_577_p3 > 32'd4194304) ? 1'b1 : 1'b0);

assign input_i_V_1_fu_393_p2 = (16'd0 - grp_rotate_fu_947_p_dout0_0);

assign input_i_V_3_fu_399_p3 = ((tmp_1_fu_378_p6[0:0] == 1'b1) ? input_i_V_1_fu_393_p2 : grp_rotate_fu_947_p_dout0_0);

assign input_q_V_3_fu_407_p3 = ((tmp_1_fu_378_p6[0:0] == 1'b1) ? grp_rotate_fu_947_p_dout0_1 : input_q_V_fu_387_p2);

assign input_q_V_fu_387_p2 = (16'd0 - grp_rotate_fu_947_p_dout0_1);

assign max_V_fu_577_p3 = ((xor_ln1061_fu_565_p2[0:0] == 1'b1) ? abs_i_V_reg_977 : abs_q_V_reg_985);

assign min_V_1_fu_571_p3 = ((xor_ln1061_fu_565_p2[0:0] == 1'b1) ? abs_q_V_reg_985 : abs_i_V_reg_977);

assign out_i_V_fu_451_p4 = {{grp_fu_792_p3[31:1]}};

assign out_q_V_fu_464_p4 = {{grp_fu_802_p3[32:1]}};

assign p_Result_2_fu_520_p3 = grp_fu_802_p3[32'd32];

assign p_Result_3_fu_479_p4 = {|(1'd0), p_Val2_s_fu_473_p2[31 - 1:0]};

assign p_Result_4_fu_510_p4 = {|(1'd0), p_Val2_2_fu_504_p2[31 - 1:0]};

assign p_Result_s_fu_489_p3 = grp_fu_792_p3[32'd31];

assign p_Val2_2_fu_504_p2 = (32'd0 - out_q_V_fu_464_p4);

assign p_Val2_s_fu_473_p2 = ($signed(32'd0) - $signed(sext_ln1676_fu_460_p1));

assign quadrant_V_fu_553_p4 = {{{tmp_reg_993}, {tmp_11_reg_998}}, {icmp_ln1057_1_fu_549_p2}};

assign r_fu_603_p2 = min_V_1_reg_1007 << 32'd9;

assign ret_10_fu_722_p2 = (10'd0 - zext_ln225_fu_719_p1);

assign sext_ln1676_fu_460_p1 = $signed(out_i_V_fu_451_p4);

assign sext_ln225_1_fu_437_p1 = rhs_fu_415_p6;

assign sext_ln225_2_fu_445_p1 = $signed(input_q_V_3_reg_938);

assign sext_ln225_3_fu_441_p1 = rhs_3_fu_424_p6;

assign sext_ln225_fu_433_p1 = $signed(input_i_V_3_fu_399_p3);

assign sext_ln42_fu_728_p1 = $signed(ret_10_fu_722_p2);

assign sext_ln45_fu_701_p1 = $signed(add_ln70_fu_695_p2);

assign sub_ln70_1_fu_736_p2 = ($signed(10'd804) - $signed(zext_ln70_1_fu_733_p1));

assign sub_ln70_2_fu_681_p2 = ($signed(11'd1608) - $signed(zext_ln70_3_fu_677_p1));

assign sub_ln70_fu_713_p2 = ($signed(12'd3292) - $signed(zext_ln70_fu_709_p1));

assign sym_phase_V_address0 = zext_ln573_fu_354_p1;

assign symbol_iq_M_imag_V_address0 = zext_ln573_fu_354_p1;

assign symbol_iq_M_real_V_address0 = zext_ln573_fu_354_p1;

assign tmp_12_fu_629_p3 = grp_fu_623_p2[32'd9];

assign tmp_s_fu_340_p5 = ap_sig_allocacmp_i_V[1:0];

assign trunc_ln26_fu_599_p1 = max_V_fu_577_p3[22:0];

assign trunc_ln573_fu_336_p1 = ap_sig_allocacmp_i_V[1:0];

assign trunc_ln70_fu_366_p1 = sym_phase_V_q0[15:0];

assign xor_ln1061_fu_565_p2 = (icmp_ln1061_fu_561_p2 ^ 1'd1);

assign zext_ln225_fu_719_p1 = p_phase_V_reg_1049;

assign zext_ln36_fu_705_p1 = atan_lut_V_q0;

assign zext_ln39_fu_742_p1 = sub_ln70_1_fu_736_p2;

assign zext_ln48_fu_687_p1 = sub_ln70_2_fu_681_p2;

assign zext_ln51_fu_673_p1 = add_ln70_2_fu_667_p2;

assign zext_ln573_1_fu_649_p1 = atan_addr_V_1_reg_1039;

assign zext_ln573_fu_354_p1 = tmp_s_fu_340_p6;

assign zext_ln70_1_fu_733_p1 = p_phase_V_reg_1049;

assign zext_ln70_2_fu_691_p1 = atan_lut_V_q0;

assign zext_ln70_3_fu_677_p1 = atan_lut_V_q0;

assign zext_ln70_4_fu_663_p1 = atan_lut_V_q0;

assign zext_ln70_5_fu_653_p1 = atan_lut_V_q0;

assign zext_ln70_fu_709_p1 = atan_lut_V_q0;

endmodule //equalizer_equalizer_Pipeline_lvpe_est
