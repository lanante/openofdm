// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module equalizer_lvpe_estimate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        symbol_iq_M_real_0_0_0_address0,
        symbol_iq_M_real_0_0_0_ce0,
        symbol_iq_M_real_0_0_0_q0,
        symbol_iq_M_imag_0_0_0_address0,
        symbol_iq_M_imag_0_0_0_ce0,
        symbol_iq_M_imag_0_0_0_q0,
        sym_phase_address0,
        sym_phase_ce0,
        sym_phase_q0,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        rotate_I_V_address0,
        rotate_I_V_ce0,
        rotate_I_V_q0,
        rotate_Q_V_address0,
        rotate_Q_V_ce0,
        rotate_Q_V_q0,
        atan_lut_V_address0,
        atan_lut_V_ce0,
        atan_lut_V_q0,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] symbol_iq_M_real_0_0_0_address0;
output   symbol_iq_M_real_0_0_0_ce0;
input  [15:0] symbol_iq_M_real_0_0_0_q0;
output  [5:0] symbol_iq_M_imag_0_0_0_address0;
output   symbol_iq_M_imag_0_0_0_ce0;
input  [15:0] symbol_iq_M_imag_0_0_0_q0;
output  [5:0] sym_phase_address0;
output   sym_phase_ce0;
input  [17:0] sym_phase_q0;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [0:0] p_read8;
input  [0:0] p_read9;
input  [0:0] p_read10;
input  [0:0] p_read11;
output  [8:0] rotate_I_V_address0;
output   rotate_I_V_ce0;
input  [11:0] rotate_I_V_q0;
output  [8:0] rotate_Q_V_address0;
output   rotate_Q_V_ce0;
input  [10:0] rotate_Q_V_q0;
output  [8:0] atan_lut_V_address0;
output   atan_lut_V_ce0;
input  [8:0] atan_lut_V_q0;
output  [18:0] ap_return;

reg ap_idle;
reg symbol_iq_M_real_0_0_0_ce0;
reg symbol_iq_M_imag_0_0_0_ce0;
reg sym_phase_ce0;
reg rotate_I_V_ce0;
reg rotate_Q_V_ce0;
reg atan_lut_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1057_fu_357_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1057_reg_1446;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter1_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter2_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter3_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter4_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter5_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter6_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter7_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter8_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter9_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter10_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter11_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter12_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter13_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter14_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter15_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter16_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter17_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter18_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter19_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter20_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter21_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter22_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter23_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter24_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter25_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter26_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter27_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter28_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter29_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter30_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter31_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter32_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter33_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter34_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter35_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter36_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter37_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter38_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter39_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter40_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter41_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter42_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter43_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter44_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter45_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter46_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter47_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter48_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter49_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter50_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter51_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter52_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter53_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter54_reg;
reg   [0:0] icmp_ln1057_reg_1446_pp0_iter55_reg;
wire   [1:0] trunc_ln573_fu_369_p1;
reg   [1:0] trunc_ln573_reg_1450;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter1_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter2_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter3_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter4_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter5_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter6_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter7_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter8_reg;
reg   [1:0] trunc_ln573_reg_1450_pp0_iter9_reg;
wire  signed [5:0] lhs_6_fu_373_p6;
reg  signed [5:0] lhs_6_reg_1457;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter1_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter2_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter3_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter4_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter5_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter6_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter7_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter8_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter9_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter10_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter11_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter12_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter13_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter14_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter15_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter16_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter17_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter18_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter19_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter20_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter21_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter22_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter23_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter24_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter25_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter26_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter27_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter28_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter29_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter30_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter31_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter32_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter33_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter34_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter35_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter36_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter37_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter38_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter39_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter40_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter41_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter42_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter43_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter44_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter45_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter46_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter47_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter48_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter49_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter50_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter51_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter52_reg;
reg  signed [5:0] lhs_6_reg_1457_pp0_iter53_reg;
wire   [63:0] zext_ln573_fu_387_p1;
reg   [63:0] zext_ln573_reg_1462;
reg   [63:0] zext_ln573_reg_1462_pp0_iter1_reg;
reg   [63:0] zext_ln573_reg_1462_pp0_iter2_reg;
reg   [63:0] zext_ln573_reg_1462_pp0_iter3_reg;
reg   [63:0] zext_ln573_reg_1462_pp0_iter4_reg;
wire   [15:0] trunc_ln70_fu_397_p1;
reg   [15:0] trunc_ln70_reg_1473;
reg   [0:0] tmp_reg_1479;
reg   [0:0] tmp_reg_1479_pp0_iter2_reg;
wire   [0:0] icmp_ln1069_fu_420_p2;
reg   [0:0] icmp_ln1069_reg_1488;
wire   [8:0] actual_phase_V_fu_426_p1;
reg   [8:0] actual_phase_V_reg_1495;
wire   [0:0] icmp_ln1069_1_fu_430_p2;
reg   [0:0] icmp_ln1069_1_reg_1503;
wire   [0:0] icmp_ln1069_2_fu_436_p2;
reg   [0:0] icmp_ln1069_2_reg_1509;
wire   [2:0] quadrant_V_6_fu_548_p3;
reg   [2:0] quadrant_V_6_reg_1514;
reg   [2:0] quadrant_V_6_reg_1514_pp0_iter4_reg;
reg   [11:0] rhs_1_reg_1540;
reg   [10:0] rhs_2_reg_1549;
wire  signed [27:0] sext_ln1524_fu_789_p1;
wire  signed [27:0] sext_ln1524_1_fu_793_p1;
reg  signed [27:0] sext_ln1524_1_reg_1567;
wire  signed [27:0] sext_ln1524_3_fu_797_p1;
reg  signed [27:0] sext_ln1524_3_reg_1573;
wire  signed [27:0] sext_ln1524_2_fu_801_p1;
wire  signed [27:0] grp_fu_1301_p2;
wire  signed [27:0] grp_fu_1307_p2;
wire   [15:0] input_i_V_fu_844_p3;
reg   [15:0] input_i_V_reg_1595;
wire   [15:0] input_q_V_3_fu_852_p3;
reg   [15:0] input_q_V_3_reg_1600;
reg   [15:0] input_q_V_3_reg_1600_pp0_iter10_reg;
wire  signed [31:0] sext_ln225_fu_878_p1;
wire  signed [31:0] sext_ln225_1_fu_881_p1;
reg  signed [31:0] sext_ln225_1_reg_1611;
wire  signed [31:0] sext_ln225_3_fu_885_p1;
reg  signed [31:0] sext_ln225_3_reg_1617;
wire  signed [31:0] sext_ln225_2_fu_889_p1;
wire  signed [31:0] grp_fu_1329_p2;
wire   [31:0] abs_i_V_fu_940_p3;
reg   [31:0] abs_i_V_reg_1639;
wire   [31:0] abs_q_V_fu_971_p3;
reg   [31:0] abs_q_V_reg_1647;
reg   [0:0] tmp_11_reg_1655;
reg   [0:0] tmp_11_reg_1655_pp0_iter15_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter16_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter17_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter18_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter19_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter20_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter21_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter22_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter23_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter24_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter25_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter26_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter27_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter28_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter29_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter30_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter31_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter32_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter33_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter34_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter35_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter36_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter37_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter38_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter39_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter40_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter41_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter42_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter43_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter44_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter45_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter46_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter47_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter48_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter49_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter50_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter51_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter52_reg;
reg   [0:0] tmp_11_reg_1655_pp0_iter53_reg;
reg   [0:0] tmp_12_reg_1660;
reg   [0:0] tmp_12_reg_1660_pp0_iter15_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter16_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter17_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter18_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter19_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter20_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter21_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter22_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter23_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter24_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter25_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter26_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter27_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter28_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter29_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter30_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter31_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter32_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter33_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter34_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter35_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter36_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter37_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter38_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter39_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter40_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter41_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter42_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter43_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter44_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter45_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter46_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter47_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter48_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter49_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter50_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter51_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter52_reg;
reg   [0:0] tmp_12_reg_1660_pp0_iter53_reg;
wire   [0:0] icmp_ln1057_1_fu_993_p2;
reg   [0:0] icmp_ln1057_1_reg_1665;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter16_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter17_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter18_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter19_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter20_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter21_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter22_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter23_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter24_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter25_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter26_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter27_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter28_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter29_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter30_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter31_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter32_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter33_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter34_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter35_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter36_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter37_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter38_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter39_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter40_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter41_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter42_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter43_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter44_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter45_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter46_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter47_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter48_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter49_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter50_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter51_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter52_reg;
reg   [0:0] icmp_ln1057_1_reg_1665_pp0_iter53_reg;
wire   [31:0] min_V_1_fu_1013_p3;
reg   [31:0] min_V_1_reg_1670;
wire   [0:0] icmp_ln1065_fu_1019_p2;
reg   [0:0] icmp_ln1065_reg_1676;
reg   [22:0] tmp_8_reg_1682;
wire   [22:0] trunc_ln25_fu_1035_p1;
reg   [22:0] trunc_ln25_reg_1687;
wire   [31:0] dividend_V_1_fu_1044_p3;
wire   [0:0] icmp_ln1065_1_fu_1081_p2;
reg   [0:0] icmp_ln1065_1_reg_1702;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter17_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter18_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter19_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter20_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter21_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter22_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter23_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter24_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter25_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter26_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter27_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter28_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter29_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter30_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter31_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter32_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter33_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter34_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter35_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter36_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter37_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter38_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter39_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter40_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter41_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter42_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter43_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter44_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter45_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter46_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter47_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter48_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter49_reg;
reg   [0:0] icmp_ln1065_1_reg_1702_pp0_iter50_reg;
wire   [8:0] atan_addr_V_1_fu_1096_p3;
reg   [8:0] atan_addr_V_1_reg_1707;
reg   [8:0] p_phase_V_reg_1717;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln573_1_fu_556_p1;
wire   [63:0] zext_ln573_2_fu_1104_p1;
reg   [18:0] Sxy_V_fu_186;
wire  signed [18:0] grp_fu_1362_p3;
reg  signed [18:0] ap_sig_allocacmp_Sxy_V_load;
reg   [18:0] ap_sig_allocacmp_Sxy_V_load_1;
wire    ap_loop_init;
reg   [2:0] i_V_fu_190;
reg   [2:0] ap_sig_allocacmp_i_V_1;
wire   [2:0] add_ln870_1_fu_363_p2;
wire   [1:0] lhs_6_fu_373_p5;
wire   [15:0] phase_abs_V_fu_409_p2;
wire   [15:0] phase_abs_V_1_fu_414_p3;
wire   [0:0] xor_ln1069_fu_485_p2;
wire   [0:0] xor_ln1069_1_fu_495_p2;
wire   [0:0] and_ln1069_1_fu_500_p2;
wire   [8:0] actual_phase_V_2_fu_468_p2;
wire   [8:0] actual_phase_V_1_fu_456_p2;
wire   [0:0] and_ln1069_fu_490_p2;
wire   [8:0] actual_phase_V_3_fu_480_p2;
wire   [0:0] or_ln1069_fu_513_p2;
wire   [8:0] select_ln1069_fu_505_p3;
wire   [8:0] select_ln1069_1_fu_519_p3;
wire   [2:0] quadrant_V_fu_442_p3;
wire   [2:0] quadrant_V_3_fu_473_p3;
wire   [2:0] quadrant_V_1_fu_449_p3;
wire   [2:0] quadrant_V_4_fu_533_p3;
wire   [2:0] quadrant_V_2_fu_461_p3;
wire   [2:0] quadrant_V_5_fu_540_p3;
wire   [8:0] actual_phase_V_4_fu_525_p3;
wire   [12:0] zext_ln225_fu_562_p1;
wire  signed [12:0] ret_1_fu_565_p2;
wire   [11:0] zext_ln225_1_fu_575_p1;
wire  signed [11:0] ret_2_fu_578_p2;
wire  signed [15:0] sext_ln70_fu_571_p1;
wire   [27:0] tmp_1_fu_584_p3;
wire   [26:0] tmp_2_fu_596_p4;
wire   [27:0] tmp_4_i_fu_608_p4;
wire  signed [15:0] sext_ln70_1_fu_621_p1;
wire   [27:0] tmp_5_i_fu_625_p3;
wire   [26:0] tmp_3_fu_636_p3;
wire   [27:0] tmp_4_fu_647_p4;
wire   [0:0] icmp_ln22_2_fu_688_p2;
wire  signed [28:0] tmp_7_i_fu_656_p1;
wire   [28:0] tmp_8_i_fu_660_p4;
wire   [0:0] icmp_ln22_1_fu_683_p2;
wire   [0:0] icmp_ln22_fu_678_p2;
wire   [28:0] tmp_9_i_fu_670_p3;
wire  signed [28:0] tmp_2_i_fu_592_p1;
wire   [0:0] or_ln22_fu_701_p2;
wire   [28:0] select_ln22_fu_693_p3;
wire   [28:0] select_ln22_1_fu_707_p3;
wire   [0:0] icmp_ln22_3_fu_723_p2;
wire   [28:0] zext_ln1526_2_fu_643_p1;
wire   [28:0] select_ln22_2_fu_715_p3;
wire   [0:0] icmp_ln22_4_fu_736_p2;
wire   [28:0] zext_ln1526_1_fu_632_p1;
wire   [28:0] select_ln22_3_fu_728_p3;
wire   [0:0] icmp_ln22_5_fu_749_p2;
wire   [28:0] zext_ln1526_fu_617_p1;
wire   [28:0] select_ln22_4_fu_741_p3;
wire   [0:0] icmp_ln22_6_fu_762_p2;
wire   [28:0] tmp_3_i_cast_fu_604_p1;
wire   [28:0] select_ln22_5_fu_754_p3;
wire   [28:0] rot_iq_fu_767_p3;
wire  signed [15:0] rhs_3_fu_775_p1;
wire  signed [12:0] trunc_ln51_1_fu_779_p4;
wire  signed [27:0] grp_fu_1313_p3;
wire  signed [27:0] grp_fu_1321_p3;
wire   [15:0] out_iq_M_imag_V_fu_814_p4;
wire   [15:0] out_iq_M_real_V_fu_805_p4;
wire   [0:0] tmp_5_fu_823_p6;
wire   [15:0] input_i_V_2_fu_838_p2;
wire   [15:0] input_q_V_fu_832_p2;
wire  signed [15:0] rhs_fu_860_p6;
wire  signed [15:0] rhs_4_fu_869_p6;
wire  signed [31:0] grp_fu_1335_p2;
wire  signed [31:0] grp_fu_1342_p3;
wire   [30:0] out_i_V_fu_895_p4;
wire  signed [32:0] grp_fu_1352_p3;
wire  signed [31:0] sext_ln1676_fu_904_p1;
wire   [31:0] p_Val2_s_fu_917_p2;
wire   [0:0] p_Result_s_fu_933_p3;
wire   [31:0] p_Result_3_fu_923_p4;
wire   [31:0] out_q_V_fu_908_p4;
wire   [31:0] p_Val2_2_fu_948_p2;
wire   [0:0] p_Result_2_fu_964_p3;
wire   [31:0] p_Result_4_fu_954_p4;
wire   [0:0] icmp_ln1061_fu_997_p2;
wire   [0:0] xor_ln1061_fu_1001_p2;
wire   [31:0] max_V_fu_1007_p3;
wire   [31:0] r_fu_1039_p2;
wire   [22:0] divisor_V_fu_1050_p3;
wire   [22:0] grp_fu_1059_p1;
wire   [31:0] tmp_13_fu_1065_p3;
wire   [41:0] zext_ln1065_1_fu_1077_p1;
wire   [41:0] zext_ln1065_fu_1073_p1;
wire   [8:0] grp_fu_1059_p2;
wire   [0:0] xor_ln1065_fu_1087_p2;
wire   [8:0] atan_addr_V_fu_1092_p1;
wire   [11:0] zext_ln70_2_fu_1121_p1;
wire   [9:0] zext_ln70_1_fu_1118_p1;
wire   [9:0] sub_ln70_1_fu_1130_p2;
wire   [9:0] ret_11_fu_1140_p2;
wire   [10:0] zext_ln70_fu_1115_p1;
wire   [10:0] add_ln70_fu_1150_p2;
wire   [10:0] sub_ln70_2_fu_1160_p2;
wire   [10:0] add_ln70_1_fu_1170_p2;
wire   [2:0] quadrant_fu_1108_p4;
wire   [0:0] icmp_ln32_fu_1186_p2;
wire   [11:0] add_ln70_2_fu_1180_p2;
wire   [11:0] sub_ln70_fu_1124_p2;
wire   [0:0] icmp_ln32_1_fu_1200_p2;
wire   [11:0] zext_ln70_4_fu_1176_p1;
wire   [11:0] select_ln32_fu_1192_p3;
wire   [0:0] icmp_ln32_2_fu_1214_p2;
wire   [11:0] zext_ln70_3_fu_1166_p1;
wire   [11:0] select_ln32_1_fu_1206_p3;
wire   [0:0] icmp_ln32_3_fu_1228_p2;
wire  signed [11:0] sext_ln70_3_fu_1156_p1;
wire   [11:0] select_ln32_2_fu_1220_p3;
wire   [0:0] icmp_ln32_4_fu_1242_p2;
wire  signed [11:0] sext_ln70_2_fu_1146_p1;
wire   [11:0] select_ln32_3_fu_1234_p3;
wire   [0:0] icmp_ln32_5_fu_1256_p2;
wire   [11:0] zext_ln225_2_fu_1136_p1;
wire   [11:0] select_ln32_4_fu_1248_p3;
wire   [0:0] icmp_ln32_6_fu_1270_p2;
wire   [11:0] select_ln32_5_fu_1262_p3;
wire  signed [11:0] pilot_iq_phase_V_fu_1276_p3;
wire  signed [15:0] grp_fu_1301_p0;
wire  signed [15:0] grp_fu_1307_p1;
wire  signed [15:0] grp_fu_1313_p0;
wire  signed [12:0] grp_fu_1313_p1;
wire  signed [15:0] grp_fu_1321_p0;
wire  signed [15:0] grp_fu_1321_p1;
wire  signed [15:0] grp_fu_1329_p1;
wire  signed [15:0] grp_fu_1335_p1;
wire  signed [15:0] grp_fu_1342_p0;
wire  signed [15:0] grp_fu_1342_p1;
wire  signed [15:0] grp_fu_1352_p0;
wire  signed [15:0] grp_fu_1352_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] grp_fu_1059_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_done_reg = 1'b0;
end

equalizer_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U49(
    .din0(6'd7),
    .din1(6'd21),
    .din2(6'd43),
    .din3(6'd57),
    .din4(lhs_6_fu_373_p5),
    .dout(lhs_6_fu_373_p6)
);

equalizer_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U50(
    .din0(p_read8),
    .din1(p_read9),
    .din2(p_read10),
    .din3(p_read11),
    .din4(trunc_ln573_reg_1450_pp0_iter8_reg),
    .dout(tmp_5_fu_823_p6)
);

equalizer_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U51(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(trunc_ln573_reg_1450_pp0_iter9_reg),
    .dout(rhs_fu_860_p6)
);

equalizer_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U52(
    .din0(p_read4),
    .din1(p_read5),
    .din2(p_read6),
    .din3(p_read7),
    .din4(trunc_ln573_reg_1450_pp0_iter9_reg),
    .dout(rhs_4_fu_869_p6)
);

equalizer_udiv_32ns_23ns_9_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 9 ))
udiv_32ns_23ns_9_36_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dividend_V_1_fu_1044_p3),
    .din1(grp_fu_1059_p1),
    .ce(1'b1),
    .dout(grp_fu_1059_p2)
);

equalizer_mul_mul_16s_16s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
mul_mul_16s_16s_28_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1301_p0),
    .din1(rhs_3_fu_775_p1),
    .ce(1'b1),
    .dout(grp_fu_1301_p2)
);

equalizer_mul_mul_13s_16s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
mul_mul_13s_16s_28_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln51_1_fu_779_p4),
    .din1(grp_fu_1307_p1),
    .ce(1'b1),
    .dout(grp_fu_1307_p2)
);

equalizer_mac_mulsub_16s_13s_28s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_mulsub_16s_13s_28s_28_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1313_p0),
    .din1(grp_fu_1313_p1),
    .din2(grp_fu_1301_p2),
    .ce(1'b1),
    .dout(grp_fu_1313_p3)
);

equalizer_mac_muladd_16s_16s_28s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_16s_28s_28_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1321_p0),
    .din1(grp_fu_1321_p1),
    .din2(grp_fu_1307_p2),
    .ce(1'b1),
    .dout(grp_fu_1321_p3)
);

equalizer_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rhs_fu_860_p6),
    .din1(grp_fu_1329_p1),
    .ce(1'b1),
    .dout(grp_fu_1329_p2)
);

equalizer_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rhs_4_fu_869_p6),
    .din1(grp_fu_1335_p1),
    .ce(1'b1),
    .dout(grp_fu_1335_p2)
);

equalizer_mac_mulsub_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_mulsub_16s_16s_32s_32_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1342_p0),
    .din1(grp_fu_1342_p1),
    .din2(grp_fu_1329_p2),
    .ce(1'b1),
    .dout(grp_fu_1342_p3)
);

equalizer_mac_muladd_16s_16s_32s_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_16s_16s_32s_33_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1352_p0),
    .din1(grp_fu_1352_p1),
    .din2(grp_fu_1335_p2),
    .ce(1'b1),
    .dout(grp_fu_1352_p3)
);

equalizer_mac_muladd_12s_6s_19s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
mac_muladd_12s_6s_19s_19_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pilot_iq_phase_V_fu_1276_p3),
    .din1(lhs_6_reg_1457_pp0_iter53_reg),
    .din2(ap_sig_allocacmp_Sxy_V_load),
    .ce(1'b1),
    .dout(grp_fu_1362_p3)
);

equalizer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter56_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Sxy_V_fu_186 <= 19'd0;
        end else if ((ap_enable_reg_pp0_iter57 == 1'b1)) begin
            Sxy_V_fu_186 <= grp_fu_1362_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1057_fu_357_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_V_fu_190 <= add_ln870_1_fu_363_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_190 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        abs_i_V_reg_1639 <= abs_i_V_fu_940_p3;
        abs_q_V_reg_1647 <= abs_q_V_fu_971_p3;
        actual_phase_V_reg_1495 <= actual_phase_V_fu_426_p1;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        atan_addr_V_1_reg_1707 <= atan_addr_V_1_fu_1096_p3;
        icmp_ln1057_1_reg_1665 <= icmp_ln1057_1_fu_993_p2;
        icmp_ln1057_1_reg_1665_pp0_iter16_reg <= icmp_ln1057_1_reg_1665;
        icmp_ln1057_1_reg_1665_pp0_iter17_reg <= icmp_ln1057_1_reg_1665_pp0_iter16_reg;
        icmp_ln1057_1_reg_1665_pp0_iter18_reg <= icmp_ln1057_1_reg_1665_pp0_iter17_reg;
        icmp_ln1057_1_reg_1665_pp0_iter19_reg <= icmp_ln1057_1_reg_1665_pp0_iter18_reg;
        icmp_ln1057_1_reg_1665_pp0_iter20_reg <= icmp_ln1057_1_reg_1665_pp0_iter19_reg;
        icmp_ln1057_1_reg_1665_pp0_iter21_reg <= icmp_ln1057_1_reg_1665_pp0_iter20_reg;
        icmp_ln1057_1_reg_1665_pp0_iter22_reg <= icmp_ln1057_1_reg_1665_pp0_iter21_reg;
        icmp_ln1057_1_reg_1665_pp0_iter23_reg <= icmp_ln1057_1_reg_1665_pp0_iter22_reg;
        icmp_ln1057_1_reg_1665_pp0_iter24_reg <= icmp_ln1057_1_reg_1665_pp0_iter23_reg;
        icmp_ln1057_1_reg_1665_pp0_iter25_reg <= icmp_ln1057_1_reg_1665_pp0_iter24_reg;
        icmp_ln1057_1_reg_1665_pp0_iter26_reg <= icmp_ln1057_1_reg_1665_pp0_iter25_reg;
        icmp_ln1057_1_reg_1665_pp0_iter27_reg <= icmp_ln1057_1_reg_1665_pp0_iter26_reg;
        icmp_ln1057_1_reg_1665_pp0_iter28_reg <= icmp_ln1057_1_reg_1665_pp0_iter27_reg;
        icmp_ln1057_1_reg_1665_pp0_iter29_reg <= icmp_ln1057_1_reg_1665_pp0_iter28_reg;
        icmp_ln1057_1_reg_1665_pp0_iter30_reg <= icmp_ln1057_1_reg_1665_pp0_iter29_reg;
        icmp_ln1057_1_reg_1665_pp0_iter31_reg <= icmp_ln1057_1_reg_1665_pp0_iter30_reg;
        icmp_ln1057_1_reg_1665_pp0_iter32_reg <= icmp_ln1057_1_reg_1665_pp0_iter31_reg;
        icmp_ln1057_1_reg_1665_pp0_iter33_reg <= icmp_ln1057_1_reg_1665_pp0_iter32_reg;
        icmp_ln1057_1_reg_1665_pp0_iter34_reg <= icmp_ln1057_1_reg_1665_pp0_iter33_reg;
        icmp_ln1057_1_reg_1665_pp0_iter35_reg <= icmp_ln1057_1_reg_1665_pp0_iter34_reg;
        icmp_ln1057_1_reg_1665_pp0_iter36_reg <= icmp_ln1057_1_reg_1665_pp0_iter35_reg;
        icmp_ln1057_1_reg_1665_pp0_iter37_reg <= icmp_ln1057_1_reg_1665_pp0_iter36_reg;
        icmp_ln1057_1_reg_1665_pp0_iter38_reg <= icmp_ln1057_1_reg_1665_pp0_iter37_reg;
        icmp_ln1057_1_reg_1665_pp0_iter39_reg <= icmp_ln1057_1_reg_1665_pp0_iter38_reg;
        icmp_ln1057_1_reg_1665_pp0_iter40_reg <= icmp_ln1057_1_reg_1665_pp0_iter39_reg;
        icmp_ln1057_1_reg_1665_pp0_iter41_reg <= icmp_ln1057_1_reg_1665_pp0_iter40_reg;
        icmp_ln1057_1_reg_1665_pp0_iter42_reg <= icmp_ln1057_1_reg_1665_pp0_iter41_reg;
        icmp_ln1057_1_reg_1665_pp0_iter43_reg <= icmp_ln1057_1_reg_1665_pp0_iter42_reg;
        icmp_ln1057_1_reg_1665_pp0_iter44_reg <= icmp_ln1057_1_reg_1665_pp0_iter43_reg;
        icmp_ln1057_1_reg_1665_pp0_iter45_reg <= icmp_ln1057_1_reg_1665_pp0_iter44_reg;
        icmp_ln1057_1_reg_1665_pp0_iter46_reg <= icmp_ln1057_1_reg_1665_pp0_iter45_reg;
        icmp_ln1057_1_reg_1665_pp0_iter47_reg <= icmp_ln1057_1_reg_1665_pp0_iter46_reg;
        icmp_ln1057_1_reg_1665_pp0_iter48_reg <= icmp_ln1057_1_reg_1665_pp0_iter47_reg;
        icmp_ln1057_1_reg_1665_pp0_iter49_reg <= icmp_ln1057_1_reg_1665_pp0_iter48_reg;
        icmp_ln1057_1_reg_1665_pp0_iter50_reg <= icmp_ln1057_1_reg_1665_pp0_iter49_reg;
        icmp_ln1057_1_reg_1665_pp0_iter51_reg <= icmp_ln1057_1_reg_1665_pp0_iter50_reg;
        icmp_ln1057_1_reg_1665_pp0_iter52_reg <= icmp_ln1057_1_reg_1665_pp0_iter51_reg;
        icmp_ln1057_1_reg_1665_pp0_iter53_reg <= icmp_ln1057_1_reg_1665_pp0_iter52_reg;
        icmp_ln1057_reg_1446_pp0_iter10_reg <= icmp_ln1057_reg_1446_pp0_iter9_reg;
        icmp_ln1057_reg_1446_pp0_iter11_reg <= icmp_ln1057_reg_1446_pp0_iter10_reg;
        icmp_ln1057_reg_1446_pp0_iter12_reg <= icmp_ln1057_reg_1446_pp0_iter11_reg;
        icmp_ln1057_reg_1446_pp0_iter13_reg <= icmp_ln1057_reg_1446_pp0_iter12_reg;
        icmp_ln1057_reg_1446_pp0_iter14_reg <= icmp_ln1057_reg_1446_pp0_iter13_reg;
        icmp_ln1057_reg_1446_pp0_iter15_reg <= icmp_ln1057_reg_1446_pp0_iter14_reg;
        icmp_ln1057_reg_1446_pp0_iter16_reg <= icmp_ln1057_reg_1446_pp0_iter15_reg;
        icmp_ln1057_reg_1446_pp0_iter17_reg <= icmp_ln1057_reg_1446_pp0_iter16_reg;
        icmp_ln1057_reg_1446_pp0_iter18_reg <= icmp_ln1057_reg_1446_pp0_iter17_reg;
        icmp_ln1057_reg_1446_pp0_iter19_reg <= icmp_ln1057_reg_1446_pp0_iter18_reg;
        icmp_ln1057_reg_1446_pp0_iter20_reg <= icmp_ln1057_reg_1446_pp0_iter19_reg;
        icmp_ln1057_reg_1446_pp0_iter21_reg <= icmp_ln1057_reg_1446_pp0_iter20_reg;
        icmp_ln1057_reg_1446_pp0_iter22_reg <= icmp_ln1057_reg_1446_pp0_iter21_reg;
        icmp_ln1057_reg_1446_pp0_iter23_reg <= icmp_ln1057_reg_1446_pp0_iter22_reg;
        icmp_ln1057_reg_1446_pp0_iter24_reg <= icmp_ln1057_reg_1446_pp0_iter23_reg;
        icmp_ln1057_reg_1446_pp0_iter25_reg <= icmp_ln1057_reg_1446_pp0_iter24_reg;
        icmp_ln1057_reg_1446_pp0_iter26_reg <= icmp_ln1057_reg_1446_pp0_iter25_reg;
        icmp_ln1057_reg_1446_pp0_iter27_reg <= icmp_ln1057_reg_1446_pp0_iter26_reg;
        icmp_ln1057_reg_1446_pp0_iter28_reg <= icmp_ln1057_reg_1446_pp0_iter27_reg;
        icmp_ln1057_reg_1446_pp0_iter29_reg <= icmp_ln1057_reg_1446_pp0_iter28_reg;
        icmp_ln1057_reg_1446_pp0_iter2_reg <= icmp_ln1057_reg_1446_pp0_iter1_reg;
        icmp_ln1057_reg_1446_pp0_iter30_reg <= icmp_ln1057_reg_1446_pp0_iter29_reg;
        icmp_ln1057_reg_1446_pp0_iter31_reg <= icmp_ln1057_reg_1446_pp0_iter30_reg;
        icmp_ln1057_reg_1446_pp0_iter32_reg <= icmp_ln1057_reg_1446_pp0_iter31_reg;
        icmp_ln1057_reg_1446_pp0_iter33_reg <= icmp_ln1057_reg_1446_pp0_iter32_reg;
        icmp_ln1057_reg_1446_pp0_iter34_reg <= icmp_ln1057_reg_1446_pp0_iter33_reg;
        icmp_ln1057_reg_1446_pp0_iter35_reg <= icmp_ln1057_reg_1446_pp0_iter34_reg;
        icmp_ln1057_reg_1446_pp0_iter36_reg <= icmp_ln1057_reg_1446_pp0_iter35_reg;
        icmp_ln1057_reg_1446_pp0_iter37_reg <= icmp_ln1057_reg_1446_pp0_iter36_reg;
        icmp_ln1057_reg_1446_pp0_iter38_reg <= icmp_ln1057_reg_1446_pp0_iter37_reg;
        icmp_ln1057_reg_1446_pp0_iter39_reg <= icmp_ln1057_reg_1446_pp0_iter38_reg;
        icmp_ln1057_reg_1446_pp0_iter3_reg <= icmp_ln1057_reg_1446_pp0_iter2_reg;
        icmp_ln1057_reg_1446_pp0_iter40_reg <= icmp_ln1057_reg_1446_pp0_iter39_reg;
        icmp_ln1057_reg_1446_pp0_iter41_reg <= icmp_ln1057_reg_1446_pp0_iter40_reg;
        icmp_ln1057_reg_1446_pp0_iter42_reg <= icmp_ln1057_reg_1446_pp0_iter41_reg;
        icmp_ln1057_reg_1446_pp0_iter43_reg <= icmp_ln1057_reg_1446_pp0_iter42_reg;
        icmp_ln1057_reg_1446_pp0_iter44_reg <= icmp_ln1057_reg_1446_pp0_iter43_reg;
        icmp_ln1057_reg_1446_pp0_iter45_reg <= icmp_ln1057_reg_1446_pp0_iter44_reg;
        icmp_ln1057_reg_1446_pp0_iter46_reg <= icmp_ln1057_reg_1446_pp0_iter45_reg;
        icmp_ln1057_reg_1446_pp0_iter47_reg <= icmp_ln1057_reg_1446_pp0_iter46_reg;
        icmp_ln1057_reg_1446_pp0_iter48_reg <= icmp_ln1057_reg_1446_pp0_iter47_reg;
        icmp_ln1057_reg_1446_pp0_iter49_reg <= icmp_ln1057_reg_1446_pp0_iter48_reg;
        icmp_ln1057_reg_1446_pp0_iter4_reg <= icmp_ln1057_reg_1446_pp0_iter3_reg;
        icmp_ln1057_reg_1446_pp0_iter50_reg <= icmp_ln1057_reg_1446_pp0_iter49_reg;
        icmp_ln1057_reg_1446_pp0_iter51_reg <= icmp_ln1057_reg_1446_pp0_iter50_reg;
        icmp_ln1057_reg_1446_pp0_iter52_reg <= icmp_ln1057_reg_1446_pp0_iter51_reg;
        icmp_ln1057_reg_1446_pp0_iter53_reg <= icmp_ln1057_reg_1446_pp0_iter52_reg;
        icmp_ln1057_reg_1446_pp0_iter54_reg <= icmp_ln1057_reg_1446_pp0_iter53_reg;
        icmp_ln1057_reg_1446_pp0_iter55_reg <= icmp_ln1057_reg_1446_pp0_iter54_reg;
        icmp_ln1057_reg_1446_pp0_iter5_reg <= icmp_ln1057_reg_1446_pp0_iter4_reg;
        icmp_ln1057_reg_1446_pp0_iter6_reg <= icmp_ln1057_reg_1446_pp0_iter5_reg;
        icmp_ln1057_reg_1446_pp0_iter7_reg <= icmp_ln1057_reg_1446_pp0_iter6_reg;
        icmp_ln1057_reg_1446_pp0_iter8_reg <= icmp_ln1057_reg_1446_pp0_iter7_reg;
        icmp_ln1057_reg_1446_pp0_iter9_reg <= icmp_ln1057_reg_1446_pp0_iter8_reg;
        icmp_ln1065_1_reg_1702 <= icmp_ln1065_1_fu_1081_p2;
        icmp_ln1065_1_reg_1702_pp0_iter17_reg <= icmp_ln1065_1_reg_1702;
        icmp_ln1065_1_reg_1702_pp0_iter18_reg <= icmp_ln1065_1_reg_1702_pp0_iter17_reg;
        icmp_ln1065_1_reg_1702_pp0_iter19_reg <= icmp_ln1065_1_reg_1702_pp0_iter18_reg;
        icmp_ln1065_1_reg_1702_pp0_iter20_reg <= icmp_ln1065_1_reg_1702_pp0_iter19_reg;
        icmp_ln1065_1_reg_1702_pp0_iter21_reg <= icmp_ln1065_1_reg_1702_pp0_iter20_reg;
        icmp_ln1065_1_reg_1702_pp0_iter22_reg <= icmp_ln1065_1_reg_1702_pp0_iter21_reg;
        icmp_ln1065_1_reg_1702_pp0_iter23_reg <= icmp_ln1065_1_reg_1702_pp0_iter22_reg;
        icmp_ln1065_1_reg_1702_pp0_iter24_reg <= icmp_ln1065_1_reg_1702_pp0_iter23_reg;
        icmp_ln1065_1_reg_1702_pp0_iter25_reg <= icmp_ln1065_1_reg_1702_pp0_iter24_reg;
        icmp_ln1065_1_reg_1702_pp0_iter26_reg <= icmp_ln1065_1_reg_1702_pp0_iter25_reg;
        icmp_ln1065_1_reg_1702_pp0_iter27_reg <= icmp_ln1065_1_reg_1702_pp0_iter26_reg;
        icmp_ln1065_1_reg_1702_pp0_iter28_reg <= icmp_ln1065_1_reg_1702_pp0_iter27_reg;
        icmp_ln1065_1_reg_1702_pp0_iter29_reg <= icmp_ln1065_1_reg_1702_pp0_iter28_reg;
        icmp_ln1065_1_reg_1702_pp0_iter30_reg <= icmp_ln1065_1_reg_1702_pp0_iter29_reg;
        icmp_ln1065_1_reg_1702_pp0_iter31_reg <= icmp_ln1065_1_reg_1702_pp0_iter30_reg;
        icmp_ln1065_1_reg_1702_pp0_iter32_reg <= icmp_ln1065_1_reg_1702_pp0_iter31_reg;
        icmp_ln1065_1_reg_1702_pp0_iter33_reg <= icmp_ln1065_1_reg_1702_pp0_iter32_reg;
        icmp_ln1065_1_reg_1702_pp0_iter34_reg <= icmp_ln1065_1_reg_1702_pp0_iter33_reg;
        icmp_ln1065_1_reg_1702_pp0_iter35_reg <= icmp_ln1065_1_reg_1702_pp0_iter34_reg;
        icmp_ln1065_1_reg_1702_pp0_iter36_reg <= icmp_ln1065_1_reg_1702_pp0_iter35_reg;
        icmp_ln1065_1_reg_1702_pp0_iter37_reg <= icmp_ln1065_1_reg_1702_pp0_iter36_reg;
        icmp_ln1065_1_reg_1702_pp0_iter38_reg <= icmp_ln1065_1_reg_1702_pp0_iter37_reg;
        icmp_ln1065_1_reg_1702_pp0_iter39_reg <= icmp_ln1065_1_reg_1702_pp0_iter38_reg;
        icmp_ln1065_1_reg_1702_pp0_iter40_reg <= icmp_ln1065_1_reg_1702_pp0_iter39_reg;
        icmp_ln1065_1_reg_1702_pp0_iter41_reg <= icmp_ln1065_1_reg_1702_pp0_iter40_reg;
        icmp_ln1065_1_reg_1702_pp0_iter42_reg <= icmp_ln1065_1_reg_1702_pp0_iter41_reg;
        icmp_ln1065_1_reg_1702_pp0_iter43_reg <= icmp_ln1065_1_reg_1702_pp0_iter42_reg;
        icmp_ln1065_1_reg_1702_pp0_iter44_reg <= icmp_ln1065_1_reg_1702_pp0_iter43_reg;
        icmp_ln1065_1_reg_1702_pp0_iter45_reg <= icmp_ln1065_1_reg_1702_pp0_iter44_reg;
        icmp_ln1065_1_reg_1702_pp0_iter46_reg <= icmp_ln1065_1_reg_1702_pp0_iter45_reg;
        icmp_ln1065_1_reg_1702_pp0_iter47_reg <= icmp_ln1065_1_reg_1702_pp0_iter46_reg;
        icmp_ln1065_1_reg_1702_pp0_iter48_reg <= icmp_ln1065_1_reg_1702_pp0_iter47_reg;
        icmp_ln1065_1_reg_1702_pp0_iter49_reg <= icmp_ln1065_1_reg_1702_pp0_iter48_reg;
        icmp_ln1065_1_reg_1702_pp0_iter50_reg <= icmp_ln1065_1_reg_1702_pp0_iter49_reg;
        icmp_ln1065_reg_1676 <= icmp_ln1065_fu_1019_p2;
        icmp_ln1069_1_reg_1503 <= icmp_ln1069_1_fu_430_p2;
        icmp_ln1069_2_reg_1509 <= icmp_ln1069_2_fu_436_p2;
        icmp_ln1069_reg_1488 <= icmp_ln1069_fu_420_p2;
        input_i_V_reg_1595 <= input_i_V_fu_844_p3;
        input_q_V_3_reg_1600 <= input_q_V_3_fu_852_p3;
        input_q_V_3_reg_1600_pp0_iter10_reg <= input_q_V_3_reg_1600;
        lhs_6_reg_1457_pp0_iter10_reg <= lhs_6_reg_1457_pp0_iter9_reg;
        lhs_6_reg_1457_pp0_iter11_reg <= lhs_6_reg_1457_pp0_iter10_reg;
        lhs_6_reg_1457_pp0_iter12_reg <= lhs_6_reg_1457_pp0_iter11_reg;
        lhs_6_reg_1457_pp0_iter13_reg <= lhs_6_reg_1457_pp0_iter12_reg;
        lhs_6_reg_1457_pp0_iter14_reg <= lhs_6_reg_1457_pp0_iter13_reg;
        lhs_6_reg_1457_pp0_iter15_reg <= lhs_6_reg_1457_pp0_iter14_reg;
        lhs_6_reg_1457_pp0_iter16_reg <= lhs_6_reg_1457_pp0_iter15_reg;
        lhs_6_reg_1457_pp0_iter17_reg <= lhs_6_reg_1457_pp0_iter16_reg;
        lhs_6_reg_1457_pp0_iter18_reg <= lhs_6_reg_1457_pp0_iter17_reg;
        lhs_6_reg_1457_pp0_iter19_reg <= lhs_6_reg_1457_pp0_iter18_reg;
        lhs_6_reg_1457_pp0_iter20_reg <= lhs_6_reg_1457_pp0_iter19_reg;
        lhs_6_reg_1457_pp0_iter21_reg <= lhs_6_reg_1457_pp0_iter20_reg;
        lhs_6_reg_1457_pp0_iter22_reg <= lhs_6_reg_1457_pp0_iter21_reg;
        lhs_6_reg_1457_pp0_iter23_reg <= lhs_6_reg_1457_pp0_iter22_reg;
        lhs_6_reg_1457_pp0_iter24_reg <= lhs_6_reg_1457_pp0_iter23_reg;
        lhs_6_reg_1457_pp0_iter25_reg <= lhs_6_reg_1457_pp0_iter24_reg;
        lhs_6_reg_1457_pp0_iter26_reg <= lhs_6_reg_1457_pp0_iter25_reg;
        lhs_6_reg_1457_pp0_iter27_reg <= lhs_6_reg_1457_pp0_iter26_reg;
        lhs_6_reg_1457_pp0_iter28_reg <= lhs_6_reg_1457_pp0_iter27_reg;
        lhs_6_reg_1457_pp0_iter29_reg <= lhs_6_reg_1457_pp0_iter28_reg;
        lhs_6_reg_1457_pp0_iter2_reg <= lhs_6_reg_1457_pp0_iter1_reg;
        lhs_6_reg_1457_pp0_iter30_reg <= lhs_6_reg_1457_pp0_iter29_reg;
        lhs_6_reg_1457_pp0_iter31_reg <= lhs_6_reg_1457_pp0_iter30_reg;
        lhs_6_reg_1457_pp0_iter32_reg <= lhs_6_reg_1457_pp0_iter31_reg;
        lhs_6_reg_1457_pp0_iter33_reg <= lhs_6_reg_1457_pp0_iter32_reg;
        lhs_6_reg_1457_pp0_iter34_reg <= lhs_6_reg_1457_pp0_iter33_reg;
        lhs_6_reg_1457_pp0_iter35_reg <= lhs_6_reg_1457_pp0_iter34_reg;
        lhs_6_reg_1457_pp0_iter36_reg <= lhs_6_reg_1457_pp0_iter35_reg;
        lhs_6_reg_1457_pp0_iter37_reg <= lhs_6_reg_1457_pp0_iter36_reg;
        lhs_6_reg_1457_pp0_iter38_reg <= lhs_6_reg_1457_pp0_iter37_reg;
        lhs_6_reg_1457_pp0_iter39_reg <= lhs_6_reg_1457_pp0_iter38_reg;
        lhs_6_reg_1457_pp0_iter3_reg <= lhs_6_reg_1457_pp0_iter2_reg;
        lhs_6_reg_1457_pp0_iter40_reg <= lhs_6_reg_1457_pp0_iter39_reg;
        lhs_6_reg_1457_pp0_iter41_reg <= lhs_6_reg_1457_pp0_iter40_reg;
        lhs_6_reg_1457_pp0_iter42_reg <= lhs_6_reg_1457_pp0_iter41_reg;
        lhs_6_reg_1457_pp0_iter43_reg <= lhs_6_reg_1457_pp0_iter42_reg;
        lhs_6_reg_1457_pp0_iter44_reg <= lhs_6_reg_1457_pp0_iter43_reg;
        lhs_6_reg_1457_pp0_iter45_reg <= lhs_6_reg_1457_pp0_iter44_reg;
        lhs_6_reg_1457_pp0_iter46_reg <= lhs_6_reg_1457_pp0_iter45_reg;
        lhs_6_reg_1457_pp0_iter47_reg <= lhs_6_reg_1457_pp0_iter46_reg;
        lhs_6_reg_1457_pp0_iter48_reg <= lhs_6_reg_1457_pp0_iter47_reg;
        lhs_6_reg_1457_pp0_iter49_reg <= lhs_6_reg_1457_pp0_iter48_reg;
        lhs_6_reg_1457_pp0_iter4_reg <= lhs_6_reg_1457_pp0_iter3_reg;
        lhs_6_reg_1457_pp0_iter50_reg <= lhs_6_reg_1457_pp0_iter49_reg;
        lhs_6_reg_1457_pp0_iter51_reg <= lhs_6_reg_1457_pp0_iter50_reg;
        lhs_6_reg_1457_pp0_iter52_reg <= lhs_6_reg_1457_pp0_iter51_reg;
        lhs_6_reg_1457_pp0_iter53_reg <= lhs_6_reg_1457_pp0_iter52_reg;
        lhs_6_reg_1457_pp0_iter5_reg <= lhs_6_reg_1457_pp0_iter4_reg;
        lhs_6_reg_1457_pp0_iter6_reg <= lhs_6_reg_1457_pp0_iter5_reg;
        lhs_6_reg_1457_pp0_iter7_reg <= lhs_6_reg_1457_pp0_iter6_reg;
        lhs_6_reg_1457_pp0_iter8_reg <= lhs_6_reg_1457_pp0_iter7_reg;
        lhs_6_reg_1457_pp0_iter9_reg <= lhs_6_reg_1457_pp0_iter8_reg;
        min_V_1_reg_1670 <= min_V_1_fu_1013_p3;
        p_phase_V_reg_1717 <= atan_lut_V_q0;
        quadrant_V_6_reg_1514 <= quadrant_V_6_fu_548_p3;
        quadrant_V_6_reg_1514_pp0_iter4_reg <= quadrant_V_6_reg_1514;
        rhs_1_reg_1540 <= rotate_I_V_q0;
        rhs_2_reg_1549 <= rotate_Q_V_q0;
        sext_ln1524_1_reg_1567 <= sext_ln1524_1_fu_793_p1;
        sext_ln1524_3_reg_1573 <= sext_ln1524_3_fu_797_p1;
        sext_ln225_1_reg_1611 <= sext_ln225_1_fu_881_p1;
        sext_ln225_3_reg_1617 <= sext_ln225_3_fu_885_p1;
        tmp_11_reg_1655 <= grp_fu_1342_p3[32'd31];
        tmp_11_reg_1655_pp0_iter15_reg <= tmp_11_reg_1655;
        tmp_11_reg_1655_pp0_iter16_reg <= tmp_11_reg_1655_pp0_iter15_reg;
        tmp_11_reg_1655_pp0_iter17_reg <= tmp_11_reg_1655_pp0_iter16_reg;
        tmp_11_reg_1655_pp0_iter18_reg <= tmp_11_reg_1655_pp0_iter17_reg;
        tmp_11_reg_1655_pp0_iter19_reg <= tmp_11_reg_1655_pp0_iter18_reg;
        tmp_11_reg_1655_pp0_iter20_reg <= tmp_11_reg_1655_pp0_iter19_reg;
        tmp_11_reg_1655_pp0_iter21_reg <= tmp_11_reg_1655_pp0_iter20_reg;
        tmp_11_reg_1655_pp0_iter22_reg <= tmp_11_reg_1655_pp0_iter21_reg;
        tmp_11_reg_1655_pp0_iter23_reg <= tmp_11_reg_1655_pp0_iter22_reg;
        tmp_11_reg_1655_pp0_iter24_reg <= tmp_11_reg_1655_pp0_iter23_reg;
        tmp_11_reg_1655_pp0_iter25_reg <= tmp_11_reg_1655_pp0_iter24_reg;
        tmp_11_reg_1655_pp0_iter26_reg <= tmp_11_reg_1655_pp0_iter25_reg;
        tmp_11_reg_1655_pp0_iter27_reg <= tmp_11_reg_1655_pp0_iter26_reg;
        tmp_11_reg_1655_pp0_iter28_reg <= tmp_11_reg_1655_pp0_iter27_reg;
        tmp_11_reg_1655_pp0_iter29_reg <= tmp_11_reg_1655_pp0_iter28_reg;
        tmp_11_reg_1655_pp0_iter30_reg <= tmp_11_reg_1655_pp0_iter29_reg;
        tmp_11_reg_1655_pp0_iter31_reg <= tmp_11_reg_1655_pp0_iter30_reg;
        tmp_11_reg_1655_pp0_iter32_reg <= tmp_11_reg_1655_pp0_iter31_reg;
        tmp_11_reg_1655_pp0_iter33_reg <= tmp_11_reg_1655_pp0_iter32_reg;
        tmp_11_reg_1655_pp0_iter34_reg <= tmp_11_reg_1655_pp0_iter33_reg;
        tmp_11_reg_1655_pp0_iter35_reg <= tmp_11_reg_1655_pp0_iter34_reg;
        tmp_11_reg_1655_pp0_iter36_reg <= tmp_11_reg_1655_pp0_iter35_reg;
        tmp_11_reg_1655_pp0_iter37_reg <= tmp_11_reg_1655_pp0_iter36_reg;
        tmp_11_reg_1655_pp0_iter38_reg <= tmp_11_reg_1655_pp0_iter37_reg;
        tmp_11_reg_1655_pp0_iter39_reg <= tmp_11_reg_1655_pp0_iter38_reg;
        tmp_11_reg_1655_pp0_iter40_reg <= tmp_11_reg_1655_pp0_iter39_reg;
        tmp_11_reg_1655_pp0_iter41_reg <= tmp_11_reg_1655_pp0_iter40_reg;
        tmp_11_reg_1655_pp0_iter42_reg <= tmp_11_reg_1655_pp0_iter41_reg;
        tmp_11_reg_1655_pp0_iter43_reg <= tmp_11_reg_1655_pp0_iter42_reg;
        tmp_11_reg_1655_pp0_iter44_reg <= tmp_11_reg_1655_pp0_iter43_reg;
        tmp_11_reg_1655_pp0_iter45_reg <= tmp_11_reg_1655_pp0_iter44_reg;
        tmp_11_reg_1655_pp0_iter46_reg <= tmp_11_reg_1655_pp0_iter45_reg;
        tmp_11_reg_1655_pp0_iter47_reg <= tmp_11_reg_1655_pp0_iter46_reg;
        tmp_11_reg_1655_pp0_iter48_reg <= tmp_11_reg_1655_pp0_iter47_reg;
        tmp_11_reg_1655_pp0_iter49_reg <= tmp_11_reg_1655_pp0_iter48_reg;
        tmp_11_reg_1655_pp0_iter50_reg <= tmp_11_reg_1655_pp0_iter49_reg;
        tmp_11_reg_1655_pp0_iter51_reg <= tmp_11_reg_1655_pp0_iter50_reg;
        tmp_11_reg_1655_pp0_iter52_reg <= tmp_11_reg_1655_pp0_iter51_reg;
        tmp_11_reg_1655_pp0_iter53_reg <= tmp_11_reg_1655_pp0_iter52_reg;
        tmp_12_reg_1660 <= grp_fu_1352_p3[32'd32];
        tmp_12_reg_1660_pp0_iter15_reg <= tmp_12_reg_1660;
        tmp_12_reg_1660_pp0_iter16_reg <= tmp_12_reg_1660_pp0_iter15_reg;
        tmp_12_reg_1660_pp0_iter17_reg <= tmp_12_reg_1660_pp0_iter16_reg;
        tmp_12_reg_1660_pp0_iter18_reg <= tmp_12_reg_1660_pp0_iter17_reg;
        tmp_12_reg_1660_pp0_iter19_reg <= tmp_12_reg_1660_pp0_iter18_reg;
        tmp_12_reg_1660_pp0_iter20_reg <= tmp_12_reg_1660_pp0_iter19_reg;
        tmp_12_reg_1660_pp0_iter21_reg <= tmp_12_reg_1660_pp0_iter20_reg;
        tmp_12_reg_1660_pp0_iter22_reg <= tmp_12_reg_1660_pp0_iter21_reg;
        tmp_12_reg_1660_pp0_iter23_reg <= tmp_12_reg_1660_pp0_iter22_reg;
        tmp_12_reg_1660_pp0_iter24_reg <= tmp_12_reg_1660_pp0_iter23_reg;
        tmp_12_reg_1660_pp0_iter25_reg <= tmp_12_reg_1660_pp0_iter24_reg;
        tmp_12_reg_1660_pp0_iter26_reg <= tmp_12_reg_1660_pp0_iter25_reg;
        tmp_12_reg_1660_pp0_iter27_reg <= tmp_12_reg_1660_pp0_iter26_reg;
        tmp_12_reg_1660_pp0_iter28_reg <= tmp_12_reg_1660_pp0_iter27_reg;
        tmp_12_reg_1660_pp0_iter29_reg <= tmp_12_reg_1660_pp0_iter28_reg;
        tmp_12_reg_1660_pp0_iter30_reg <= tmp_12_reg_1660_pp0_iter29_reg;
        tmp_12_reg_1660_pp0_iter31_reg <= tmp_12_reg_1660_pp0_iter30_reg;
        tmp_12_reg_1660_pp0_iter32_reg <= tmp_12_reg_1660_pp0_iter31_reg;
        tmp_12_reg_1660_pp0_iter33_reg <= tmp_12_reg_1660_pp0_iter32_reg;
        tmp_12_reg_1660_pp0_iter34_reg <= tmp_12_reg_1660_pp0_iter33_reg;
        tmp_12_reg_1660_pp0_iter35_reg <= tmp_12_reg_1660_pp0_iter34_reg;
        tmp_12_reg_1660_pp0_iter36_reg <= tmp_12_reg_1660_pp0_iter35_reg;
        tmp_12_reg_1660_pp0_iter37_reg <= tmp_12_reg_1660_pp0_iter36_reg;
        tmp_12_reg_1660_pp0_iter38_reg <= tmp_12_reg_1660_pp0_iter37_reg;
        tmp_12_reg_1660_pp0_iter39_reg <= tmp_12_reg_1660_pp0_iter38_reg;
        tmp_12_reg_1660_pp0_iter40_reg <= tmp_12_reg_1660_pp0_iter39_reg;
        tmp_12_reg_1660_pp0_iter41_reg <= tmp_12_reg_1660_pp0_iter40_reg;
        tmp_12_reg_1660_pp0_iter42_reg <= tmp_12_reg_1660_pp0_iter41_reg;
        tmp_12_reg_1660_pp0_iter43_reg <= tmp_12_reg_1660_pp0_iter42_reg;
        tmp_12_reg_1660_pp0_iter44_reg <= tmp_12_reg_1660_pp0_iter43_reg;
        tmp_12_reg_1660_pp0_iter45_reg <= tmp_12_reg_1660_pp0_iter44_reg;
        tmp_12_reg_1660_pp0_iter46_reg <= tmp_12_reg_1660_pp0_iter45_reg;
        tmp_12_reg_1660_pp0_iter47_reg <= tmp_12_reg_1660_pp0_iter46_reg;
        tmp_12_reg_1660_pp0_iter48_reg <= tmp_12_reg_1660_pp0_iter47_reg;
        tmp_12_reg_1660_pp0_iter49_reg <= tmp_12_reg_1660_pp0_iter48_reg;
        tmp_12_reg_1660_pp0_iter50_reg <= tmp_12_reg_1660_pp0_iter49_reg;
        tmp_12_reg_1660_pp0_iter51_reg <= tmp_12_reg_1660_pp0_iter50_reg;
        tmp_12_reg_1660_pp0_iter52_reg <= tmp_12_reg_1660_pp0_iter51_reg;
        tmp_12_reg_1660_pp0_iter53_reg <= tmp_12_reg_1660_pp0_iter52_reg;
        tmp_8_reg_1682 <= {{max_V_fu_1007_p3[31:9]}};
        tmp_reg_1479_pp0_iter2_reg <= tmp_reg_1479;
        trunc_ln25_reg_1687 <= trunc_ln25_fu_1035_p1;
        trunc_ln573_reg_1450_pp0_iter2_reg <= trunc_ln573_reg_1450_pp0_iter1_reg;
        trunc_ln573_reg_1450_pp0_iter3_reg <= trunc_ln573_reg_1450_pp0_iter2_reg;
        trunc_ln573_reg_1450_pp0_iter4_reg <= trunc_ln573_reg_1450_pp0_iter3_reg;
        trunc_ln573_reg_1450_pp0_iter5_reg <= trunc_ln573_reg_1450_pp0_iter4_reg;
        trunc_ln573_reg_1450_pp0_iter6_reg <= trunc_ln573_reg_1450_pp0_iter5_reg;
        trunc_ln573_reg_1450_pp0_iter7_reg <= trunc_ln573_reg_1450_pp0_iter6_reg;
        trunc_ln573_reg_1450_pp0_iter8_reg <= trunc_ln573_reg_1450_pp0_iter7_reg;
        trunc_ln573_reg_1450_pp0_iter9_reg <= trunc_ln573_reg_1450_pp0_iter8_reg;
        zext_ln573_reg_1462_pp0_iter2_reg[5 : 0] <= zext_ln573_reg_1462_pp0_iter1_reg[5 : 0];
        zext_ln573_reg_1462_pp0_iter3_reg[5 : 0] <= zext_ln573_reg_1462_pp0_iter2_reg[5 : 0];
        zext_ln573_reg_1462_pp0_iter4_reg[5 : 0] <= zext_ln573_reg_1462_pp0_iter3_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1057_reg_1446 <= icmp_ln1057_fu_357_p2;
        icmp_ln1057_reg_1446_pp0_iter1_reg <= icmp_ln1057_reg_1446;
        lhs_6_reg_1457_pp0_iter1_reg <= lhs_6_reg_1457;
        tmp_reg_1479 <= sym_phase_q0[32'd15];
        trunc_ln573_reg_1450_pp0_iter1_reg <= trunc_ln573_reg_1450;
        trunc_ln70_reg_1473 <= trunc_ln70_fu_397_p1;
        zext_ln573_reg_1462_pp0_iter1_reg[5 : 0] <= zext_ln573_reg_1462[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_357_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_6_reg_1457 <= lhs_6_fu_373_p6;
        trunc_ln573_reg_1450 <= trunc_ln573_fu_369_p1;
        zext_ln573_reg_1462[5 : 0] <= zext_ln573_fu_387_p1[5 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_357_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter56_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter57 == 1'b1))) begin
        ap_sig_allocacmp_Sxy_V_load = grp_fu_1362_p3;
    end else begin
        ap_sig_allocacmp_Sxy_V_load = Sxy_V_fu_186;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter57 == 1'b1))) begin
        ap_sig_allocacmp_Sxy_V_load_1 = grp_fu_1362_p3;
    end else begin
        ap_sig_allocacmp_Sxy_V_load_1 = Sxy_V_fu_186;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_V_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_190;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter52 == 1'b1))) begin
        atan_lut_V_ce0 = 1'b1;
    end else begin
        atan_lut_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rotate_I_V_ce0 = 1'b1;
    end else begin
        rotate_I_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rotate_Q_V_ce0 = 1'b1;
    end else begin
        rotate_Q_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sym_phase_ce0 = 1'b1;
    end else begin
        sym_phase_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symbol_iq_M_imag_0_0_0_ce0 = 1'b1;
    end else begin
        symbol_iq_M_imag_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        symbol_iq_M_real_0_0_0_ce0 = 1'b1;
    end else begin
        symbol_iq_M_real_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs_i_V_fu_940_p3 = ((p_Result_s_fu_933_p3[0:0] == 1'b1) ? p_Result_3_fu_923_p4 : sext_ln1676_fu_904_p1);

assign abs_q_V_fu_971_p3 = ((p_Result_2_fu_964_p3[0:0] == 1'b1) ? p_Result_4_fu_954_p4 : out_q_V_fu_908_p4);

assign actual_phase_V_1_fu_456_p2 = ($signed(9'd292) - $signed(actual_phase_V_reg_1495));

assign actual_phase_V_2_fu_468_p2 = (actual_phase_V_reg_1495 + 9'd220);

assign actual_phase_V_3_fu_480_p2 = (9'd72 - actual_phase_V_reg_1495);

assign actual_phase_V_4_fu_525_p3 = ((or_ln1069_fu_513_p2[0:0] == 1'b1) ? select_ln1069_fu_505_p3 : select_ln1069_1_fu_519_p3);

assign actual_phase_V_fu_426_p1 = phase_abs_V_1_fu_414_p3[8:0];

assign add_ln70_1_fu_1170_p2 = (zext_ln70_fu_1115_p1 + 11'd804);

assign add_ln70_2_fu_1180_p2 = ($signed(zext_ln70_2_fu_1121_p1) + $signed(12'd2488));

assign add_ln70_fu_1150_p2 = ($signed(zext_ln70_fu_1115_p1) + $signed(11'd1244));

assign add_ln870_1_fu_363_p2 = (ap_sig_allocacmp_i_V_1 + 3'd1);

assign and_ln1069_1_fu_500_p2 = (xor_ln1069_1_fu_495_p2 & icmp_ln1069_2_reg_1509);

assign and_ln1069_fu_490_p2 = (xor_ln1069_fu_485_p2 & icmp_ln1069_1_reg_1503);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_return = ap_sig_allocacmp_Sxy_V_load_1;

assign atan_addr_V_1_fu_1096_p3 = ((xor_ln1065_fu_1087_p2[0:0] == 1'b1) ? 9'd511 : atan_addr_V_fu_1092_p1);

assign atan_addr_V_fu_1092_p1 = grp_fu_1059_p2[8:0];

assign atan_lut_V_address0 = zext_ln573_2_fu_1104_p1;

assign dividend_V_1_fu_1044_p3 = ((icmp_ln1065_reg_1676[0:0] == 1'b1) ? min_V_1_reg_1670 : r_fu_1039_p2);

assign divisor_V_fu_1050_p3 = ((icmp_ln1065_reg_1676[0:0] == 1'b1) ? tmp_8_reg_1682 : trunc_ln25_reg_1687);

assign grp_fu_1059_p1 = grp_fu_1059_p10;

assign grp_fu_1059_p10 = divisor_V_fu_1050_p3;

assign grp_fu_1301_p0 = sext_ln1524_fu_789_p1;

assign grp_fu_1307_p1 = sext_ln1524_fu_789_p1;

assign grp_fu_1313_p0 = sext_ln1524_2_fu_801_p1;

assign grp_fu_1313_p1 = sext_ln1524_3_reg_1573;

assign grp_fu_1321_p0 = sext_ln1524_2_fu_801_p1;

assign grp_fu_1321_p1 = sext_ln1524_1_reg_1567;

assign grp_fu_1329_p1 = sext_ln225_fu_878_p1;

assign grp_fu_1335_p1 = sext_ln225_fu_878_p1;

assign grp_fu_1342_p0 = sext_ln225_3_reg_1617;

assign grp_fu_1342_p1 = sext_ln225_2_fu_889_p1;

assign grp_fu_1352_p0 = sext_ln225_1_reg_1611;

assign grp_fu_1352_p1 = sext_ln225_2_fu_889_p1;

assign icmp_ln1057_1_fu_993_p2 = (($signed(abs_i_V_reg_1639) < $signed(abs_q_V_reg_1647)) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_357_p2 = ((ap_sig_allocacmp_i_V_1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1061_fu_997_p2 = (($signed(abs_i_V_reg_1639) < $signed(abs_q_V_reg_1647)) ? 1'b1 : 1'b0);

assign icmp_ln1065_1_fu_1081_p2 = ((zext_ln1065_1_fu_1077_p1 < zext_ln1065_fu_1073_p1) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_1019_p2 = ((max_V_fu_1007_p3 > 32'd4194304) ? 1'b1 : 1'b0);

assign icmp_ln1069_1_fu_430_p2 = ((phase_abs_V_1_fu_414_p3 < 16'd805) ? 1'b1 : 1'b0);

assign icmp_ln1069_2_fu_436_p2 = ((phase_abs_V_1_fu_414_p3 < 16'd1207) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_420_p2 = ((phase_abs_V_1_fu_414_p3 < 16'd403) ? 1'b1 : 1'b0);

assign icmp_ln22_1_fu_683_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln22_2_fu_688_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln22_3_fu_723_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln22_4_fu_736_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln22_5_fu_749_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln22_6_fu_762_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_678_p2 = ((quadrant_V_6_reg_1514_pp0_iter4_reg == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_1200_p2 = ((quadrant_fu_1108_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_1214_p2 = ((quadrant_fu_1108_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln32_3_fu_1228_p2 = ((quadrant_fu_1108_p4 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln32_4_fu_1242_p2 = ((quadrant_fu_1108_p4 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln32_5_fu_1256_p2 = ((quadrant_fu_1108_p4 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln32_6_fu_1270_p2 = ((quadrant_fu_1108_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1186_p2 = ((quadrant_fu_1108_p4 == 3'd6) ? 1'b1 : 1'b0);

assign input_i_V_2_fu_838_p2 = (16'd0 - out_iq_M_real_V_fu_805_p4);

assign input_i_V_fu_844_p3 = ((tmp_5_fu_823_p6[0:0] == 1'b1) ? input_i_V_2_fu_838_p2 : out_iq_M_real_V_fu_805_p4);

assign input_q_V_3_fu_852_p3 = ((tmp_5_fu_823_p6[0:0] == 1'b1) ? out_iq_M_imag_V_fu_814_p4 : input_q_V_fu_832_p2);

assign input_q_V_fu_832_p2 = (16'd0 - out_iq_M_imag_V_fu_814_p4);

assign lhs_6_fu_373_p5 = ap_sig_allocacmp_i_V_1[1:0];

assign max_V_fu_1007_p3 = ((xor_ln1061_fu_1001_p2[0:0] == 1'b1) ? abs_i_V_reg_1639 : abs_q_V_reg_1647);

assign min_V_1_fu_1013_p3 = ((xor_ln1061_fu_1001_p2[0:0] == 1'b1) ? abs_q_V_reg_1647 : abs_i_V_reg_1639);

assign or_ln1069_fu_513_p2 = (and_ln1069_fu_490_p2 | and_ln1069_1_fu_500_p2);

assign or_ln22_fu_701_p2 = (icmp_ln22_2_fu_688_p2 | icmp_ln22_1_fu_683_p2);

assign out_i_V_fu_895_p4 = {{grp_fu_1342_p3[31:1]}};

assign out_iq_M_imag_V_fu_814_p4 = {{grp_fu_1321_p3[27:12]}};

assign out_iq_M_real_V_fu_805_p4 = {{grp_fu_1313_p3[27:12]}};

assign out_q_V_fu_908_p4 = {{grp_fu_1352_p3[32:1]}};

assign p_Result_2_fu_964_p3 = grp_fu_1352_p3[32'd32];

assign p_Result_3_fu_923_p4 = {|(1'd0), p_Val2_s_fu_917_p2[31 - 1:0]};

assign p_Result_4_fu_954_p4 = {|(1'd0), p_Val2_2_fu_948_p2[31 - 1:0]};

assign p_Result_s_fu_933_p3 = grp_fu_1342_p3[32'd31];

assign p_Val2_2_fu_948_p2 = (32'd0 - out_q_V_fu_908_p4);

assign p_Val2_s_fu_917_p2 = ($signed(32'd0) - $signed(sext_ln1676_fu_904_p1));

assign phase_abs_V_1_fu_414_p3 = ((tmp_reg_1479[0:0] == 1'b1) ? phase_abs_V_fu_409_p2 : trunc_ln70_reg_1473);

assign phase_abs_V_fu_409_p2 = (16'd0 - trunc_ln70_reg_1473);

assign pilot_iq_phase_V_fu_1276_p3 = ((icmp_ln32_6_fu_1270_p2[0:0] == 1'b1) ? zext_ln70_2_fu_1121_p1 : select_ln32_5_fu_1262_p3);

assign quadrant_V_1_fu_449_p3 = ((tmp_reg_1479_pp0_iter2_reg[0:0] == 1'b1) ? 3'd5 : 3'd1);

assign quadrant_V_2_fu_461_p3 = ((tmp_reg_1479_pp0_iter2_reg[0:0] == 1'b1) ? 3'd6 : 3'd2);

assign quadrant_V_3_fu_473_p3 = ((tmp_reg_1479_pp0_iter2_reg[0:0] == 1'b1) ? 3'd7 : 3'd3);

assign quadrant_V_4_fu_533_p3 = ((icmp_ln1069_reg_1488[0:0] == 1'b1) ? quadrant_V_fu_442_p3 : quadrant_V_3_fu_473_p3);

assign quadrant_V_5_fu_540_p3 = ((and_ln1069_fu_490_p2[0:0] == 1'b1) ? quadrant_V_1_fu_449_p3 : quadrant_V_4_fu_533_p3);

assign quadrant_V_6_fu_548_p3 = ((and_ln1069_1_fu_500_p2[0:0] == 1'b1) ? quadrant_V_2_fu_461_p3 : quadrant_V_5_fu_540_p3);

assign quadrant_V_fu_442_p3 = ((tmp_reg_1479_pp0_iter2_reg[0:0] == 1'b1) ? 3'd4 : 3'd0);

assign quadrant_fu_1108_p4 = {{{tmp_11_reg_1655_pp0_iter53_reg}, {tmp_12_reg_1660_pp0_iter53_reg}}, {icmp_ln1057_1_reg_1665_pp0_iter53_reg}};

assign r_fu_1039_p2 = min_V_1_reg_1670 << 32'd9;

assign ret_11_fu_1140_p2 = (10'd0 - zext_ln70_1_fu_1118_p1);

assign ret_1_fu_565_p2 = (13'd0 - zext_ln225_fu_562_p1);

assign ret_2_fu_578_p2 = (12'd0 - zext_ln225_1_fu_575_p1);

assign rhs_3_fu_775_p1 = rot_iq_fu_767_p3[15:0];

assign rot_iq_fu_767_p3 = ((icmp_ln22_6_fu_762_p2[0:0] == 1'b1) ? tmp_3_i_cast_fu_604_p1 : select_ln22_5_fu_754_p3);

assign rotate_I_V_address0 = zext_ln573_1_fu_556_p1;

assign rotate_Q_V_address0 = zext_ln573_1_fu_556_p1;

assign select_ln1069_1_fu_519_p3 = ((icmp_ln1069_reg_1488[0:0] == 1'b1) ? actual_phase_V_reg_1495 : actual_phase_V_3_fu_480_p2);

assign select_ln1069_fu_505_p3 = ((and_ln1069_1_fu_500_p2[0:0] == 1'b1) ? actual_phase_V_2_fu_468_p2 : actual_phase_V_1_fu_456_p2);

assign select_ln22_1_fu_707_p3 = ((icmp_ln22_fu_678_p2[0:0] == 1'b1) ? tmp_9_i_fu_670_p3 : tmp_2_i_fu_592_p1);

assign select_ln22_2_fu_715_p3 = ((or_ln22_fu_701_p2[0:0] == 1'b1) ? select_ln22_fu_693_p3 : select_ln22_1_fu_707_p3);

assign select_ln22_3_fu_728_p3 = ((icmp_ln22_3_fu_723_p2[0:0] == 1'b1) ? zext_ln1526_2_fu_643_p1 : select_ln22_2_fu_715_p3);

assign select_ln22_4_fu_741_p3 = ((icmp_ln22_4_fu_736_p2[0:0] == 1'b1) ? zext_ln1526_1_fu_632_p1 : select_ln22_3_fu_728_p3);

assign select_ln22_5_fu_754_p3 = ((icmp_ln22_5_fu_749_p2[0:0] == 1'b1) ? zext_ln1526_fu_617_p1 : select_ln22_4_fu_741_p3);

assign select_ln22_fu_693_p3 = ((icmp_ln22_2_fu_688_p2[0:0] == 1'b1) ? tmp_7_i_fu_656_p1 : tmp_8_i_fu_660_p4);

assign select_ln32_1_fu_1206_p3 = ((icmp_ln32_1_fu_1200_p2[0:0] == 1'b1) ? zext_ln70_4_fu_1176_p1 : select_ln32_fu_1192_p3);

assign select_ln32_2_fu_1220_p3 = ((icmp_ln32_2_fu_1214_p2[0:0] == 1'b1) ? zext_ln70_3_fu_1166_p1 : select_ln32_1_fu_1206_p3);

assign select_ln32_3_fu_1234_p3 = ((icmp_ln32_3_fu_1228_p2[0:0] == 1'b1) ? sext_ln70_3_fu_1156_p1 : select_ln32_2_fu_1220_p3);

assign select_ln32_4_fu_1248_p3 = ((icmp_ln32_4_fu_1242_p2[0:0] == 1'b1) ? sext_ln70_2_fu_1146_p1 : select_ln32_3_fu_1234_p3);

assign select_ln32_5_fu_1262_p3 = ((icmp_ln32_5_fu_1256_p2[0:0] == 1'b1) ? zext_ln225_2_fu_1136_p1 : select_ln32_4_fu_1248_p3);

assign select_ln32_fu_1192_p3 = ((icmp_ln32_fu_1186_p2[0:0] == 1'b1) ? add_ln70_2_fu_1180_p2 : sub_ln70_fu_1124_p2);

assign sext_ln1524_1_fu_793_p1 = rhs_3_fu_775_p1;

assign sext_ln1524_2_fu_801_p1 = $signed(symbol_iq_M_imag_0_0_0_q0);

assign sext_ln1524_3_fu_797_p1 = trunc_ln51_1_fu_779_p4;

assign sext_ln1524_fu_789_p1 = $signed(symbol_iq_M_real_0_0_0_q0);

assign sext_ln1676_fu_904_p1 = $signed(out_i_V_fu_895_p4);

assign sext_ln225_1_fu_881_p1 = rhs_fu_860_p6;

assign sext_ln225_2_fu_889_p1 = $signed(input_q_V_3_reg_1600_pp0_iter10_reg);

assign sext_ln225_3_fu_885_p1 = rhs_4_fu_869_p6;

assign sext_ln225_fu_878_p1 = $signed(input_i_V_reg_1595);

assign sext_ln70_1_fu_621_p1 = ret_2_fu_578_p2;

assign sext_ln70_2_fu_1146_p1 = $signed(ret_11_fu_1140_p2);

assign sext_ln70_3_fu_1156_p1 = $signed(add_ln70_fu_1150_p2);

assign sext_ln70_fu_571_p1 = ret_1_fu_565_p2;

assign sub_ln70_1_fu_1130_p2 = ($signed(10'd804) - $signed(zext_ln70_1_fu_1118_p1));

assign sub_ln70_2_fu_1160_p2 = ($signed(11'd1608) - $signed(zext_ln70_fu_1115_p1));

assign sub_ln70_fu_1124_p2 = ($signed(12'd3292) - $signed(zext_ln70_2_fu_1121_p1));

assign sym_phase_address0 = zext_ln573_fu_387_p1;

assign symbol_iq_M_imag_0_0_0_address0 = zext_ln573_reg_1462_pp0_iter4_reg;

assign symbol_iq_M_real_0_0_0_address0 = zext_ln573_reg_1462_pp0_iter3_reg;

assign tmp_13_fu_1065_p3 = {{divisor_V_fu_1050_p3}, {9'd0}};

assign tmp_1_fu_584_p3 = {{ret_2_fu_578_p2}, {sext_ln70_fu_571_p1}};

assign tmp_2_fu_596_p4 = {{{rhs_2_reg_1549}, {4'd0}}, {rhs_1_reg_1540}};

assign tmp_2_i_fu_592_p1 = $signed(tmp_1_fu_584_p3);

assign tmp_3_fu_636_p3 = {{rhs_2_reg_1549}, {sext_ln70_fu_571_p1}};

assign tmp_3_i_cast_fu_604_p1 = tmp_2_fu_596_p4;

assign tmp_4_fu_647_p4 = {{{ret_2_fu_578_p2}, {4'd0}}, {rhs_1_reg_1540}};

assign tmp_4_i_fu_608_p4 = {{{rhs_1_reg_1540}, {4'd0}}, {zext_ln225_1_fu_575_p1}};

assign tmp_5_i_fu_625_p3 = {{rhs_1_reg_1540}, {sext_ln70_1_fu_621_p1}};

assign tmp_7_i_fu_656_p1 = $signed(tmp_4_fu_647_p4);

assign tmp_8_i_fu_660_p4 = {{{ret_1_fu_565_p2}, {4'd0}}, {zext_ln225_1_fu_575_p1}};

assign tmp_9_i_fu_670_p3 = {{ret_1_fu_565_p2}, {sext_ln70_1_fu_621_p1}};

assign trunc_ln25_fu_1035_p1 = max_V_fu_1007_p3[22:0];

assign trunc_ln51_1_fu_779_p4 = {{rot_iq_fu_767_p3[28:16]}};

assign trunc_ln573_fu_369_p1 = ap_sig_allocacmp_i_V_1[1:0];

assign trunc_ln70_fu_397_p1 = sym_phase_q0[15:0];

assign xor_ln1061_fu_1001_p2 = (icmp_ln1061_fu_997_p2 ^ 1'd1);

assign xor_ln1065_fu_1087_p2 = (icmp_ln1065_1_reg_1702_pp0_iter50_reg ^ 1'd1);

assign xor_ln1069_1_fu_495_p2 = (icmp_ln1069_1_reg_1503 ^ 1'd1);

assign xor_ln1069_fu_485_p2 = (icmp_ln1069_reg_1488 ^ 1'd1);

assign zext_ln1065_1_fu_1077_p1 = dividend_V_1_fu_1044_p3;

assign zext_ln1065_fu_1073_p1 = tmp_13_fu_1065_p3;

assign zext_ln1526_1_fu_632_p1 = tmp_5_i_fu_625_p3;

assign zext_ln1526_2_fu_643_p1 = tmp_3_fu_636_p3;

assign zext_ln1526_fu_617_p1 = tmp_4_i_fu_608_p4;

assign zext_ln225_1_fu_575_p1 = rhs_2_reg_1549;

assign zext_ln225_2_fu_1136_p1 = sub_ln70_1_fu_1130_p2;

assign zext_ln225_fu_562_p1 = rhs_1_reg_1540;

assign zext_ln573_1_fu_556_p1 = actual_phase_V_4_fu_525_p3;

assign zext_ln573_2_fu_1104_p1 = atan_addr_V_1_reg_1707;

assign zext_ln573_fu_387_p1 = $unsigned(lhs_6_fu_373_p6);

assign zext_ln70_1_fu_1118_p1 = p_phase_V_reg_1717;

assign zext_ln70_2_fu_1121_p1 = p_phase_V_reg_1717;

assign zext_ln70_3_fu_1166_p1 = sub_ln70_2_fu_1160_p2;

assign zext_ln70_4_fu_1176_p1 = add_ln70_1_fu_1170_p2;

assign zext_ln70_fu_1115_p1 = p_phase_V_reg_1717;

always @ (posedge ap_clk) begin
    zext_ln573_reg_1462[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln573_reg_1462_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln573_reg_1462_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln573_reg_1462_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln573_reg_1462_pp0_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //equalizer_lvpe_estimate
